--[[ 
PC-Optimized, Modern Tabbed GUI for Terror+ Drawing Tool
- Tab navigation for feature categories (Drawing, Terror+, Shapes, Fun, PvP, VETO, System)
- Only one section of buttons visible at a time for compactness
- Bullet log on the left, visually distinct
- Modern, muted colors and icons
- Settings is a floating modal
- All logic and features (Veto for All, looping, drawing, etc) included
--]]

do
local plr = game:GetService("Players").LocalPlayer

local function getOtherPlayers(includeSelf)
    local all = {}
    for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
        if (includeSelf or player ~= plr) and player.Character and player.Character:FindFirstChild("Head") then
            table.insert(all, player)
        end
    end
    return all
end

local Fire_Replicated_Bullet = function(Args, DoDamage)
    local Bullets = {}
    for _, v in pairs(Args) do
        local dist = (v.START-v.END).magnitude
        local s = (dist/1)
        local vector = Vector3.new(math.random(-s,s)/10,math.random(-s,s)/10,math.random(-s,s)/10)
        local Ray = Ray.new(v.START, ((v.END + vector)- v.START).unit*100000)
        local position =  v.END
        local distance = (position - v.START).magnitude
        local rayPart = Instance.new("Part",workspace)
        local mesh = Instance.new("BlockMesh",rayPart)
        mesh.Scale = Vector3.new(.5,.5,1)
        rayPart.Name = "RayPart"
        rayPart.BrickColor = BrickColor.Yellow()
        rayPart.Material = Enum.Material.Neon
        rayPart.Anchored = true
        rayPart.CanCollide = false
        rayPart.Transparency = .2
        rayPart.formFactor = Enum.FormFactor.Custom
        rayPart.Size = Vector3.new(.22,.22,distance)
        rayPart.CFrame = CFrame.new(position,v.START) * CFrame.new(0,0,-distance/2)
        game:GetService("Debris"):AddItem(rayPart,.13)
        local RealHit,RealPos = workspace:FindPartOnRay(Ray,plr.Character)
        for i =1,((v.HIT and v.HIT:IsA("Player") and 9) or 1) do
            Bullets[#Bullets + 1] = {
                ["RayObject"] = Ray,
                ["Distance"] = distance,
                ["Cframe"] = rayPart.CFrame,
                ["Hit"] = (v.HIT and v.HIT:IsA("Player") and v.HIT.Character.Head) or (DoDamage and RealHit) or workspace:FindFirstChildOfClass("Part"),
            }
        end
    end
    local Tool,Gun = ("Remington 870"),nil
    repeat task.wait() 
        workspace.Remote.ItemHandler:InvokeServer{ Position = plr.Character:GetPivot().p, Parent = workspace.Prison_ITEMS:FindFirstChild(Tool, true) }
        Gun = plr.Backpack:FindFirstChild(Tool) or plr.Character:FindFirstChild(Tool) 
    until plr.Backpack:FindFirstChild(Tool) or plr.Character:FindFirstChild(Tool) and plr.Character:FindFirstChildOfClass("Humanoid")
    game:GetService("ReplicatedStorage"):WaitForChild("ShootEvent"):FireServer(Bullets, Gun)
    game:GetService("ReplicatedStorage").ReloadEvent:FireServer(Gun)
end

local DrawSettings = {
    ActiveRender = false,
    Drawing = false,
    HoveringOverGui = false,
    GlobalRenders = {},
    P1,P2,B=nil,nil,nil,
    DOKILL = false,
    Selected = {},
    BoldDrawing = false,
    ExtremeRandom = false,
    ExtremeRandomLoop = false,
    ExtremeRandomOrigin = nil,
    Headshot = false,
    HeadshotLoop = false,
    Star = false,
    StarLoop = false,
    Circle = false,
    CircleLoop = false,
    FullTerror = false,
    FullTerrorLoop = false,
    Veto = false,
    VetoLoop = false,
    VetoAllLoop = false,
    __loops = {},
        MultiHumanPlacement = false
}

local function stopLoop(name)
    if DrawSettings.__loops[name] then
        DrawSettings.__loops[name].running = false
        DrawSettings.__loops[name] = nil
    end
end
local function startLoop(name, fn)
    stopLoop(name)
    local loop = {running=true}
    DrawSettings.__loops[name]=loop
    task.spawn(function()
        fn(loop)
    end)
end

-- UI Setup (REPLACE THIS BLOCK ENTIRELY)
local DRAWING_TOOL = Instance.new("ScreenGui")
DRAWING_TOOL.Name = "DRAWING_TOOL"
DRAWING_TOOL.Parent = (game:GetService("CoreGui") or gethui and gethui())
DRAWING_TOOL.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- F2 toggles the GUI visibility
local isGuiVisible = true
game:GetService("UserInputService").InputBegan:Connect(function(input, gpe)
    if not gpe and input.KeyCode == Enum.KeyCode.F2 then
        isGuiVisible = not isGuiVisible
        DRAWING_TOOL.Enabled = isGuiVisible
    end
end)

local MAINDRAW = Instance.new("Frame")
MAINDRAW.Name = "MAINDRAW"
MAINDRAW.Parent = DRAWING_TOOL
MAINDRAW.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
MAINDRAW.Position = UDim2.new(0.22,0,0.14,0)
MAINDRAW.Size = UDim2.new(0.44, 0, 0.62, 0)
MAINDRAW.BorderSizePixel = 0
local UICorner = Instance.new("UICorner", MAINDRAW)
UICorner.CornerRadius = UDim.new(0, 13)
local UIStroke = Instance.new("UIStroke", MAINDRAW)
MAINDRAW.BackgroundTransparency = 0.1
UIStroke.Thickness = 2.2
UIStroke.Transparency = 0.18
UIStroke.Color = Color3.fromRGB(180, 180, 180)


-- Title Bar (compact, centered title, no emojis)
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Parent = MAINDRAW
TitleBar.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
TitleBar.BackgroundTransparency = 0
TitleBar.Size = UDim2.new(1,0,0.07,0)
TitleBar.Position = UDim2.new(0,0,0,0)
TitleBar.BorderSizePixel = 0
local UICornerTB = Instance.new("UICorner", TitleBar)
UICornerTB.CornerRadius = UDim.new(0, 13)

local TitleLabel = Instance.new("TextLabel")
TitleLabel.Name = "TitleLabel"
TitleLabel.Parent = TitleBar
TitleLabel.BackgroundTransparency = 1
TitleLabel.AnchorPoint = Vector2.new(0.5, 0.5)
TitleLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
TitleLabel.Size = UDim2.new(0.9, 0, 0.9, 0)
TitleLabel.Font = Enum.Font.GothamBlack
TitleLabel.Text = "Drawtool V1"
TitleLabel.TextColor3 = Color3.fromRGB(225, 225, 255)
TitleLabel.TextStrokeTransparency = 0.73
TitleLabel.TextScaled = true
TitleLabel.TextWrapped = true
TitleLabel.TextXAlignment = Enum.TextXAlignment.Center
TitleLabel.TextYAlignment = Enum.TextYAlignment.Center

local SettingsButton = Instance.new("ImageButton")
SettingsButton.Name = "SettingsButton"
SettingsButton.Parent = TitleBar
SettingsButton.BackgroundTransparency = 1.0
SettingsButton.Position = UDim2.new(0.96, -24, 0.5, -12)
SettingsButton.Size = UDim2.new(0, 24, 0, 24)
SettingsButton.Image = "rbxassetid://1203479768"
SettingsButton.ImageColor3 = Color3.fromRGB(170, 180, 240)

-- Bullet Log Sidebar (unchanged layout but muted)
local BulletLogFrame = Instance.new("Frame")
BulletLogFrame.Name = "BulletLogFrame"
BulletLogFrame.Parent = MAINDRAW
BulletLogFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
BulletLogFrame.BackgroundTransparency = 0.07
BulletLogFrame.Position = UDim2.new(0.014, 0, 0.1, 0)
BulletLogFrame.Size = UDim2.new(0.22, 0, 0.88, 0)
BulletLogFrame.BorderSizePixel = 0
local UIC_Bullet = Instance.new("UICorner", BulletLogFrame)
UIC_Bullet.CornerRadius = UDim.new(0, 7)
local UIStroke_Bullet = Instance.new("UIStroke", BulletLogFrame)
UIStroke_Bullet.Color = Color3.fromRGB(150, 150, 150)
UIStroke_Bullet.Thickness = 1.2
UIStroke_Bullet.Transparency = 0.25

local BulletLogLabel = Instance.new("TextLabel")
BulletLogLabel.Name = "BulletLogLabel"
BulletLogLabel.Parent = BulletLogFrame
BulletLogLabel.BackgroundTransparency = 1
BulletLogLabel.Position = UDim2.new(0.09, 0, 0.01, 0)
BulletLogLabel.Size = UDim2.new(0.9, 0, 0.04, 0)
BulletLogLabel.Font = Enum.Font.GothamBold
BulletLogLabel.Text = "BULLETS"
BulletLogLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
BulletLogLabel.TextScaled = true
BulletLogLabel.TextSize = 13
BulletLogLabel.TextWrapped = true
BulletLogLabel.TextXAlignment = Enum.TextXAlignment.Left

local BulletsLogs = Instance.new("ScrollingFrame")
BulletsLogs.Name = "BulletsLogs"
BulletsLogs.Parent = BulletLogFrame
BulletsLogs.Active = true
BulletsLogs.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
BulletsLogs.BackgroundTransparency = 0.73
BulletsLogs.BorderSizePixel = 0
BulletsLogs.Position = UDim2.new(0.065, 0, 0.06, 0)
BulletsLogs.Size = UDim2.new(0.92, 0, 0.92, 0)
BulletsLogs.CanvasSize = UDim2.new(0, 0, 2, 0)
BulletsLogs.ScrollBarThickness = 7
BulletsLogs.ZIndex = 10
local UIListLayoutB = Instance.new("UIListLayout", BulletsLogs)
UIListLayoutB.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayoutB.Padding = UDim.new(0, 3)

local tempdraw = Instance.new("TextButton")
tempdraw.Name = "tempdraw"
tempdraw.Parent = DRAWING_TOOL
tempdraw.BackgroundColor3 = Color3.fromRGB(240, 240, 255)
tempdraw.BackgroundTransparency = 0.91
tempdraw.BorderSizePixel = 0
tempdraw.Size = UDim2.new(1, 0, 0.009, 0)
tempdraw.Visible = false
tempdraw.Font = Enum.Font.GothamSemibold
tempdraw.Text = "BULLET #1"
tempdraw.TextColor3 = Color3.fromRGB(80, 80, 120)
tempdraw.TextSize = 14
tempdraw.TextScaled = true
tempdraw.TextWrapped = true
tempdraw.TextXAlignment = Enum.TextXAlignment.Left
local UIStroke_6 = Instance.new("UIStroke", tempdraw)
UIStroke_6.Transparency = 0.62
local UIStroke_7 = Instance.new("UIStroke", tempdraw)
UIStroke_7.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_7.Color = Color3.fromRGB(190, 190, 220)
UIStroke_7.Transparency = 0.62
local closedraw = Instance.new("ImageButton")
closedraw.Name = "closedraw"
closedraw.Parent = tempdraw
closedraw.BackgroundTransparency = 1.0
closedraw.Position = UDim2.new(0.84, 0, 0.18, 0)
closedraw.Size = UDim2.new(0.15, 0, 0.65, 0)
closedraw.Image = "rbxassetid://16888018114"
closedraw.ImageColor3 = Color3.fromRGB(200, 90, 90)

-- Main Panel and Tabs
local MainPanel = Instance.new("Frame")
MainPanel.Name = "MainPanel"
MainPanel.Parent = MAINDRAW
MainPanel.BackgroundTransparency = 1
MainPanel.Position = UDim2.new(0.25, 0, 0.1, 0)
MainPanel.Size = UDim2.new(0.73, 0, 0.88, 0)
MainPanel.BorderSizePixel = 0

local TabBar = Instance.new("Frame")
TabBar.Name = "TabBar"
TabBar.Parent = MainPanel
TabBar.BackgroundTransparency = 1
TabBar.Position = UDim2.new(0,0,0,0)
TabBar.Size = UDim2.new(1,0,0.09,0)
local TabList = Instance.new("UIListLayout", TabBar)
TabList.FillDirection = Enum.FillDirection.Horizontal
TabList.HorizontalAlignment = Enum.HorizontalAlignment.Center
TabList.SortOrder = Enum.SortOrder.LayoutOrder
TabList.Padding = UDim.new(0, 6)

-- Use only 4 clean tabs; icons intentionally empty
local tabNames = {"Drawing","Combat","Shapes","System"}
local tabIcons = { Drawing = "", Combat = "", Shapes = "", System = "" }
local TabButtons = {}
local tabFrames = {}
for i, tab in ipairs(tabNames) do
    local btn = Instance.new("TextButton")
    btn.Name = tab .. "Tab"
    btn.Parent = TabBar
    -- wider to fit 4 tabs nicely
    btn.Size = UDim2.new(0.22,0,1,0)
    btn.BackgroundColor3 = Color3.fromRGB(39,39,55)
    btn.BackgroundTransparency = 0.12
    btn.Font = Enum.Font.GothamBold
    btn.Text = tabIcons[tab] .. " " .. tab
    btn.TextColor3 = Color3.fromRGB(210,210,255)
    btn.TextSize = 18
    btn.TextScaled = true
    btn.AutoButtonColor = true
    btn.LayoutOrder = i
    local UIC = Instance.new("UICorner",btn)
    UIC.CornerRadius = UDim.new(0, 4)
    TabButtons[tab] = btn

    local secFrame = Instance.new("Frame")
    secFrame.Name = tab.."Section"
    secFrame.Parent = MainPanel
    secFrame.Position = UDim2.new(0,0,0.12,0)
    secFrame.Size = UDim2.new(1,0,0.88,0)
    secFrame.BackgroundTransparency = 1
    secFrame.Visible = false
    tabFrames[tab] = secFrame
end

-- Keep original sectionColors (so existing makeButton/Buttons calls referencing these keys keep working)
local sectionColors = {
    Drawing = Color3.fromRGB(50, 50, 50),
    TerrorPlus = Color3.fromRGB(60, 60, 60),
    Shapes = Color3.fromRGB(70, 70, 70),
    Fun = Color3.fromRGB(80, 80, 80),
    PvP = Color3.fromRGB(90, 90, 90),
    VETO = Color3.fromRGB(100, 100, 100),
    System = Color3.fromRGB(110, 110, 110),
}

-- smaller, consistent buttons
local function makeButton(name, text, color)
    local btn = Instance.new("TextButton")
    btn.Name = name
    btn.BackgroundColor3 = color or Color3.fromRGB(35, 35, 35)
    btn.BackgroundTransparency = 0.14
    btn.BorderSizePixel = 0
    btn.Size = UDim2.new(1, 0, 0, 24)
    btn.Font = Enum.Font.GothamBold
    btn.Text = text
    btn.TextColor3 = Color3.fromRGB(240, 240, 240)
    btn.TextStrokeTransparency = 0.83
    btn.TextScaled = true
    btn.TextSize = 14
    btn.TextWrapped = true
    btn.AutoButtonColor = true
    local UIC = Instance.new("UICorner",btn)
    UIC.CornerRadius = UDim.new(0, 5)
    return btn
end

local neutralBtn = Color3.fromRGB(40, 40, 40)


-- (Recreate all buttons using the same names so existing handlers remain valid)
local Buttons = {}
Buttons.ActivateButton = makeButton("ActivateButton", "START RENDER", neutralBtn)
Buttons.ActivateDrawing = makeButton("ActivateDrawing", "START DRAWING", neutralBtn)
Buttons.BoldDrawingButton = makeButton("BoldDrawingButton", "BOLD DRAWING: OFF", neutralBtn)
Buttons.StarButton = makeButton("StarButton", "DRAW STAR", neutralBtn)
Buttons.StarLoopButton = makeButton("StarLoopButton", "STAR LOOP: OFF", neutralBtn)
Buttons.CircleButton = makeButton("CircleButton", "DRAW CIRCLE", neutralBtn)
Buttons.CircleLoopButton = makeButton("CircleLoopButton", "CIRCLE LOOP: OFF", neutralBtn)
Buttons.ExtremeRandomButton = makeButton("ExtremeRandomButton", "EXTREME RANDOM: OFF", neutralBtn)
Buttons.ExtremeRandomLoopButton = makeButton("ExtremeRandomLoopButton", "EXT. RANDOM LOOP: OFF", neutralBtn)
Buttons.HeadshotButton = makeButton("HeadshotButton", "HEADSHOT ALL: OFF", neutralBtn)
Buttons.HeadshotLoopButton = makeButton("HeadshotLoopButton", "HEADSHOT LOOP: OFF", neutralBtn)
Buttons.FullTerrorButton = makeButton("FullTerrorButton", "TERROR+ : OFF", neutralBtn)
Buttons.FullTerrorLoopButton = makeButton("FullTerrorLoopButton", "TERROR+ LOOP: OFF", neutralBtn)
Buttons.VetoButton = makeButton("VetoButton", "POP VETO", neutralBtn)
Buttons.VetoLoopButton = makeButton("VetoLoopButton", "VETO LOOP: OFF", neutralBtn)
Buttons.VetoForAllButton = makeButton("VetoForAllButton", "VETO FOR ALL", neutralBtn)
Buttons.VetoForAllLoopButton = makeButton("VetoForAllLoopButton", "VETO FOR ALL LOOP: OFF", neutralBtn)
Buttons.ExportButton = makeButton("ExportButton", "EXPORT DRAWINGS", neutralBtn)
Buttons.ImportButton = makeButton("ImportButton", "IMPORT DRAWINGS", neutralBtn)
Buttons.FullHavocButton = makeButton("FullHavocButton", "FULL HAVOC: OFF", neutralBtn)
Buttons.ExtraTerrorButton = makeButton("ExtraTerrorButton", "EXTRA TERROR: OFF", neutralBtn)
Buttons.ApostlesForAllButton = makeButton("ApostlesForAllButton", "APOSTLES FOR ALL: OFF", neutralBtn)
Buttons.HumanLoopButton = makeButton("HumanLoopButton", "HUMAN LOOP: OFF", neutralBtn)
Buttons.MultiHumanLoopButton = makeButton("MultiHumanLoopButton", "MULTI HUMAN LOOP: OFF", neutralBtn)
Buttons.RaveButton = makeButton("RaveButton", "RAVE: OFF", neutralBtn)
Buttons.BlindButton = makeButton("BlindButton", "BLIND: OFF", neutralBtn)
Buttons.SmiteButton = makeButton("SmiteButton", "SMITE: OFF", neutralBtn)
Buttons.FlingRayButton = makeButton("FlingRayButton", "FLING RAY: OFF", neutralBtn)
Buttons.StarRainButton = makeButton("StarRainButton", "STAR RAIN: OFF", neutralBtn)
Buttons.PentagramRainButton = makeButton("PentagramRainButton", "PENTAGRAM RAIN: OFF", neutralBtn)
Buttons.FOVPrisonButton = makeButton("FOVPrisonButton", "FOV PRISON: OFF", neutralBtn)
Buttons.StarAriseButton = makeButton("StarAriseButton", "STAR ARISE", neutralBtn)
Buttons.ImportStarsButton = makeButton("ImportStarsButton", "IMPORT STARS", neutralBtn)



-- Distribute buttons into 4 clean tabs (no duplicates)
local tabButtonGroups = {
    Drawing = {"ActivateDrawing", "BoldDrawingButton"},
    Combat = {"FullTerrorLoopButton","HeadshotLoopButton", "ExtremeRandomLoopButton", "FullHavocButton", "ExtraTerrorButton", "ApostlesForAllButton","SmiteButton","ExtremeRandomLoopButton"},
    Shapes = { "MultiHumanLoopButton","StarLoopButton","CircleLoopButton","VetoForAllLoopButton","StarRainButton","PentagramRainButton","StarAriseButton"},
    System = {"ActivateButton", "ExportButton", "ImportButton", "ImportStarsButton"}
}
for tab, btns in pairs(tabButtonGroups) do
    local secFrame = tabFrames[tab]
    if secFrame then
        local lay = Instance.new("UIListLayout",secFrame)
        lay.SortOrder = Enum.SortOrder.LayoutOrder
        lay.Padding = UDim.new(0,8)
        for _,bname in ipairs(btns) do
            local btn = Buttons[bname]
            if btn then
                btn.Parent = secFrame
            end
        end
    end
end

local function showTab(tab)
    for t,frame in pairs(tabFrames) do
        frame.Visible = false
    end
    for t,btn in pairs(TabButtons) do
        if t==tab then
            btn.BackgroundColor3 = Color3.fromRGB(59, 59, 105)
            btn.TextColor3 = Color3.fromRGB(250,230,80)
        else
            btn.BackgroundColor3 = Color3.fromRGB(39,39,55)
            btn.TextColor3 = Color3.fromRGB(210,210,255)
        end
    end
    if tabFrames[tab] then
        tabFrames[tab].Visible = true
    end
end
for tab,btn in pairs(TabButtons) do
    btn.MouseButton1Click:Connect(function() showTab(tab) end)
end
showTab("Drawing")

-- Settings Modal toggle remains unchanged (existing code expects SettingsButton)
SettingsButton.MouseButton1Click:Connect(function()
    SETTINGS.Visible = not SETTINGS.Visible
end)

task.spawn(function()
    local t = 0
    while SettingsButton and SettingsButton.Parent do
        local r = math.sin(t) * 127 + 128
        local g = math.sin(t + 2) * 127 + 128
        local b = math.sin(t + 4) * 127 + 128
        SettingsButton.ImageColor3 = Color3.fromRGB(r, g, b)
        t = t + math.pi / 60 -- smooth, ~1 second cycle
        task.wait(0.016) -- 60 FPS
    end
end)

-- END UI Setup (REPLACED)

-- Settings Modal
local SETTINGS = Instance.new("Frame")
SETTINGS.Name = "SETTINGS"
SETTINGS.Parent = DRAWING_TOOL
SETTINGS.BackgroundColor3 = Color3.fromRGB(36, 36, 44)
SETTINGS.BackgroundTransparency = 0.10
SETTINGS.BorderSizePixel = 0
SETTINGS.Position = UDim2.new(0.32, 0, 0.2, 0)
SETTINGS.Size = UDim2.new(0.18, 0, 0.23, 0)
SETTINGS.Visible = false
SETTINGS.ZIndex = 100
local UIStroke_5 = Instance.new("UIStroke", SETTINGS)
UIStroke_5.Color = Color3.fromRGB(140, 180, 255)
UIStroke_5.Transparency = 0.12
local UICorner_4 = Instance.new("UICorner", SETTINGS)
UICorner_4.CornerRadius = UDim.new(0, 7)
local REFRESHRATE = Instance.new("TextBox")
REFRESHRATE.Name = "REFRESHRATE"
REFRESHRATE.Parent = SETTINGS
REFRESHRATE.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
REFRESHRATE.BackgroundTransparency = 0.94
REFRESHRATE.BorderSizePixel = 0
REFRESHRATE.Position = UDim2.new(0.07, 0, 0.19, 0)
REFRESHRATE.Size = UDim2.new(0.87, 0, 0.22, 0)
REFRESHRATE.ClearTextOnFocus = false
REFRESHRATE.Font = Enum.Font.Gotham
REFRESHRATE.PlaceholderText = "REFRESH RATE"
REFRESHRATE.Text = "0.7"
REFRESHRATE.TextColor3 = Color3.fromRGB(21, 255, 56)
REFRESHRATE.TextSize = 13
local TextLabel_2 = Instance.new("TextLabel")
TextLabel_2.Parent = REFRESHRATE
TextLabel_2.BackgroundTransparency = 1
TextLabel_2.Position = UDim2.new(0.19, 0, -0.85, 0)
TextLabel_2.Size = UDim2.new(0, 97, 0, 17)
TextLabel_2.Font = Enum.Font.Gotham
TextLabel_2.Text = "REFRESH RATE"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextSize = 13
local DODAMAGE = Instance.new("TextButton")
DODAMAGE.Name = "DODAMAGE"
DODAMAGE.Parent = SETTINGS
DODAMAGE.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
DODAMAGE.BackgroundTransparency = 0.94
DODAMAGE.BorderSizePixel = 0
DODAMAGE.Position = UDim2.new(0.07, 0, 0.56, 0)
DODAMAGE.Size = UDim2.new(0.87, 0, 0.22, 0)
DODAMAGE.Font = Enum.Font.Gotham
DODAMAGE.Text = "DO KILL"
DODAMAGE.TextColor3 = Color3.fromRGB(255, 75, 78)
DODAMAGE.TextSize = 13
local TextLabel_3 = Instance.new("TextLabel")
TextLabel_3.Parent = DODAMAGE
TextLabel_3.BackgroundTransparency = 1
TextLabel_3.Position = UDim2.new(0.037, 0, -0.82, 0)
TextLabel_3.Size = UDim2.new(0.93, 0, 0.82, 0)
TextLabel_3.Font = Enum.Font.Gotham
TextLabel_3.Text = "DAMAGE WHEN TOUCHED"
TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.TextScaled = true
TextLabel_3.TextSize = 13
TextLabel_3.TextWrapped = true
SettingsButton.MouseButton1Click:Connect(function()
    SETTINGS.Visible = not SETTINGS.Visible
end)
REFRESHRATE.FocusLost:Connect(function()
    if not tonumber(REFRESHRATE.Text) or (tonumber(REFRESHRATE.Text) and tonumber(REFRESHRATE.Text))<.2 then
        REFRESHRATE.Text = "0.7"
    end
end)
DODAMAGE.MouseButton1Click:Connect(function()
    DrawSettings.DOKILL = not DrawSettings.DOKILL
    DODAMAGE.TextColor3 = DrawSettings.DOKILL and Color3.fromRGB(73, 255, 125) or Color3.fromRGB(255, 75, 78)
end)

-- ===== DRAW FUNCTIONS & HANDLERS =====

local VETO_LETTERS = {
    V = {
        {Vector3.new(0,1.6,0), Vector3.new(0.5,0,0)},
        {Vector3.new(1,1.6,0), Vector3.new(0.5,0,0)},
    },
    E = {
        {Vector3.new(0,0,0), Vector3.new(0,1.6,0)},
        {Vector3.new(0,1.6,0), Vector3.new(1,1.6,0)},
        {Vector3.new(0,0.8,0), Vector3.new(0.7,0.8,0)},
        {Vector3.new(0,0,0), Vector3.new(1,0,0)},
    },
    T = {
        {Vector3.new(0,1.6,0), Vector3.new(1,1.6,0)},
        {Vector3.new(0.5,1.6,0), Vector3.new(0.5,0,0)},
    },
    O = (function()
        local circle = {}
        local n = 18
        local r = 0.78
        local cx, cy = 0.5, 0.8
        for i=1,n do
            local a1 = math.rad((i-1)*360/n)
            local a2 = math.rad((i% n)*360/n)
            local p1 = Vector3.new(cx + math.cos(a1)*r, cy + math.sin(a1)*r, 0)
            local p2 = Vector3.new(cx + math.cos(a2)*r, cy + math.sin(a2)*r, 0)
            table.insert(circle, {p1, p2})
        end
        return circle
    end)(),
}

local function drawVetoWord(headPosition, facingCF)
    local args = {}
    local scale = 0.47
    local letter_gap = 0.32
    local total_letters = 4
    local word_width = ((total_letters-1) * (1+letter_gap) + 1) * scale
    local local_offset = Vector3.new(-word_width/2, 1.01, 0)
    local facing = facingCF or CFrame.new()
    for i,letter in ipairs({'V','E','T','O'}) do
        local ldef = VETO_LETTERS[letter]
        local xShift = (i-1)*(1+letter_gap)*scale
        for _,seg in ipairs(ldef) do
            local p1 = (Vector3.new(xShift + seg[1].X*scale, seg[1].Y*scale, 0) + local_offset)
            local p2 = (Vector3.new(xShift + seg[2].X*scale, seg[2].Y*scale, 0) + local_offset)
            local p1w = (facing * p1) + headPosition
            local p2w = (facing * p2) + headPosition
            table.insert(args, {START=p1w, END=p2w})
        end
    end
    Fire_Replicated_Bullet(args, false)
end


-- ===== Dominant Pose Human Shape (Massive) =====
-- ===== Dominant Pose Human with Bold Lines, Sharper Sword, and Chest Star =====
local DOMINANT_HUMAN = {
    -- Legs (wide stance)
    {Vector3.new(-4, 0, 0), Vector3.new(-2, 10, 0)}, -- left leg
    {Vector3.new(4, 0, 0), Vector3.new(2, 10, 0)},   -- right leg

    -- Hips and torso (slight lean back)
    {Vector3.new(-2, 10, 0), Vector3.new(2, 10, 0)},  -- hips
    {Vector3.new(0, 10, 0), Vector3.new(0, 26, -1)},  -- spine

    -- Broad shoulders
    {Vector3.new(-6, 26, -1), Vector3.new(6, 26, -1)},

    -- Left arm down
    {Vector3.new(-6, 26, -1), Vector3.new(-10, 15, -1)},

    -- Right arm holding sword
    {Vector3.new(6, 26, -1), Vector3.new(8, 40, -1)},  -- forearm
    {Vector3.new(8, 40, -1), Vector3.new(8, 75, -1)},  -- sword blade
    {Vector3.new(8, 75, -1), Vector3.new(7, 78, -1)},  -- tip left
    {Vector3.new(8, 75, -1), Vector3.new(9, 78, -1)},  -- tip right
    {Vector3.new(7, 78, -1), Vector3.new(9, 78, -1)},  -- tip join
    {Vector3.new(7, 40, -1), Vector3.new(9, 40, -1)},  -- crossguard

    -- Head (big square outline)
     {Vector3.new(-3, 28, 0), Vector3.new(3, 28, 0)},
    {Vector3.new(3, 28, 0), Vector3.new(3, 34, 0)},
    {Vector3.new(3, 34, 0), Vector3.new(-3, 34, 0)},
    {Vector3.new(-3, 34, 0), Vector3.new(-3, 28, 0)},

    -- Star on torso (five points)
    {Vector3.new(0, 20, 0), Vector3.new(1, 22, 0)},
    {Vector3.new(1, 22, 0), Vector3.new(3, 22, 0)},
    {Vector3.new(3, 22, 0), Vector3.new(1.5, 23.5, 0)},
    {Vector3.new(1.5, 23.5, 0), Vector3.new(2.2, 26, 0)},
    {Vector3.new(2.2, 26, 0), Vector3.new(0, 24.5, 0)},
    {Vector3.new(0, 24.5, 0), Vector3.new(-2.2, 26, 0)},
    {Vector3.new(-2.2, 26, 0), Vector3.new(-1.5, 23.5, 0)},
    {Vector3.new(-1.5, 23.5, 0), Vector3.new(-3, 22, 0)},
    {Vector3.new(-3, 22, 0), Vector3.new(-1, 22, 0)},
    {Vector3.new(-1, 22, 0), Vector3.new(0, 20, 0)},
}


local function CreateHumanArgs(position, scale)
    local args = {}
    scale = scale or 12 -- massive figure
    local thickness = 3 -- how bold each line is (in studs)
    local offsets = {-thickness, 0, thickness}

    for _, seg in ipairs(DOMINANT_HUMAN) do
        local startBase = position + (seg[1] * scale)
        local endBase = position + (seg[2] * scale)
        local dir = (endBase - startBase)
        local perp = dir.Unit:Cross(Vector3.new(0, 1, 0)).Unit -- perpendicular vector

        for _, off in ipairs(offsets) do
            table.insert(args, {
                START = startBase + perp * off,
                END = endBase + perp * off
            })
        end
    end
    return args
end


local APOSTLES_LETTERS = {
    A = {
        {Vector3.new(0,0,0), Vector3.new(0.5,1.6,0)},
        {Vector3.new(1,0,0), Vector3.new(0.5,1.6,0)},
        {Vector3.new(0.25,0.8,0), Vector3.new(0.75,0.8,0)},
    },
    P = {
        {Vector3.new(0,0,0), Vector3.new(0,1.6,0)},
        {Vector3.new(0,1.6,0), Vector3.new(0.75,1.6,0)},
        {Vector3.new(0.75,1.6,0), Vector3.new(0.75,0.9,0)},
        {Vector3.new(0.75,0.9,0), Vector3.new(0,0.9,0)},
    },
    S = {
          -- top curve
    {Vector3.new(0.8,1.6,0), Vector3.new(0.2,1.6,0)},
    {Vector3.new(0.2,1.6,0), Vector3.new(0.0,1.4,0)},
    {Vector3.new(0.0,1.4,0), Vector3.new(0.2,1.2,0)},
    {Vector3.new(0.2,1.2,0), Vector3.new(0.8,1.0,0)},

    -- middle connector
    {Vector3.new(0.8,1.0,0), Vector3.new(0.2,0.8,0)},

    -- bottom curve
    {Vector3.new(0.2,0.8,0), Vector3.new(0.0,0.6,0)},
    {Vector3.new(0.0,0.6,0), Vector3.new(0.2,0.4,0)},
    {Vector3.new(0.2,0.4,0), Vector3.new(0.8,0.0,0)},
    {Vector3.new(0.8,0.0,0), Vector3.new(0.2,0.0,0)},
    },
    T = {
        {Vector3.new(0,1.6,0), Vector3.new(1,1.6,0)},
        {Vector3.new(0.5,1.6,0), Vector3.new(0.5,0,0)},
    },
    L = {
        {Vector3.new(0,1.6,0), Vector3.new(0,0,0)},
        {Vector3.new(0,0,0), Vector3.new(1,0,0)},
    },
    -- E and O exist in VETO_LETTERS already (we'll reuse them)
}

-- CreateTextArgs(word, headPosition, facingCF, scale)
-- returns an array of {START=vec3, END=vec3} segments for Fire_Replicated_Bullet
local function CreateTextArgs(word, headPosition, facingCF, scale)
    local args = {}
    scale = scale or 0.47
    local letter_gap = 0.28
    local letters = {}
    word = tostring(word):upper()
    for i = 1, #word do
        letters[i] = word:sub(i,i)
    end
    local total_letters = #letters
    if total_letters == 0 then return args end

    local word_width = ((total_letters - 1) * (1 + letter_gap) + 1) * scale
    local local_offset = Vector3.new(-word_width/2, 1.05, 0)
    local facing = facingCF or CFrame.new()

    for i, ch in ipairs(letters) do
        local xShift = (i-1) * (1 + letter_gap) * scale
        -- prefer APOSTLES_LETTERS, fall back to VETO_LETTERS if available (E, O, etc.)
        local def = APOSTLES_LETTERS[ch] or VETO_LETTERS[ch]
        if def then
            for _, seg in ipairs(def) do
                local p1 = (Vector3.new(xShift + seg[1].X * scale, seg[1].Y * scale, 0) + local_offset)
                local p2 = (Vector3.new(xShift + seg[2].X * scale, seg[2].Y * scale, 0) + local_offset)
                local p1w = (facing * p1) + headPosition
                local p2w = (facing * p2) + headPosition
                table.insert(args, {START = p1w, END = p2w})
            end
        end
    end

    return args
end




local function drawStar(center, bold)
    local args = {}
    local radius = 18
    local starPoints = 5
    local pts = {}
    for i=1,starPoints do
        local angle = math.rad(72*(i-1) - 90)
        pts[i] = center + Vector3.new(math.cos(angle)*radius,0,math.sin(angle)*radius)
    end
    for i=1,starPoints do
        local from = pts[i]
        local to = pts[((i+2-1)%starPoints)+1]
        if bold then
            local dir = (to-from)
            local perp
            if math.abs(dir.Unit.Y) < 0.99 then
                perp = dir.Unit:Cross(Vector3.new(0,1,0)).Unit
            else
                perp = dir.Unit:Cross(Vector3.new(1,0,0)).Unit
            end
            local thickness = 2.5
            local count = 25
            for j=1,count do
                local offset = (((j-1)/(count-1))-0.5) * thickness
                local startOffset = from + perp * offset
                local endOffset = to + perp * offset
                table.insert(args, {START=startOffset,END=endOffset})
            end
        else
            table.insert(args, {START=from,END=to})
        end
    end
    Fire_Replicated_Bullet(args, false)
end

local function drawCircle(center)
    local args = {}
    local radius = 15
    local n = 32
    for i=1,n do
        local angle1 = math.rad((i-1)*360/n)
        local angle2 = math.rad((i% n)*360/n)
        local from = center + Vector3.new(math.cos(angle1)*radius,0,math.sin(angle1)*radius)
        local to = center + Vector3.new(math.cos(angle2)*radius,0,math.sin(angle2)*radius)
        table.insert(args,{START=from,END=to})
    end
    Fire_Replicated_Bullet(args, false)
end

local function drawFullTerror()
    local char = plr.Character
    local head = char and char:FindFirstChild("Head")
    local root = char and char.PrimaryPart or head
    if not root then return end
    local origin = root.Position
    local fwd = char.PrimaryPart and char.PrimaryPart.CFrame.LookVector or Vector3.new(0,0,1)
    local right = char.PrimaryPart and char.PrimaryPart.CFrame.RightVector or Vector3.new(1,0,0)
    local baseY = (head and head.Position.Y or origin.Y) + 12
    local heights = {0, 6, 12, 18}
    local directions = {fwd, -fwd, right, -right}
    coroutine.wrap(function()
        while true do
            for i = 1, 50 do
                local dist = i * 4
                for _, yOffset in ipairs(heights) do
                    for _, dir in ipairs(directions) do
                        drawStar(Vector3.new(origin.X, baseY + yOffset, origin.Z) + dir * dist, false)
                    end
                end
            end
            task.wait(0.5)
        end
    end)()
end

local function drawVetoForAll()
    for _, player in ipairs(getOtherPlayers(true)) do
        local head = player.Character and player.Character:FindFirstChild("Head")
        local root = player.Character and player.Character.PrimaryPart
        if head and root then
            local look = root.CFrame.LookVector
            local yrot = math.atan2(-look.Z, look.X) + math.pi/2
            local facingCF = CFrame.fromAxisAngle(Vector3.new(0,1,0), yrot)
            drawVetoWord(head.Position, facingCF)
        end
    end
end

local function AddBulletToTable(Start,End,Bullet)
    local TempButton = tempdraw:Clone()
    local i = #DrawSettings.GlobalRenders+1
    TempButton.Text = "Bullet #"..tostring(i)
    TempButton.Parent = BulletsLogs
    TempButton.Visible = true
    TempButton.closedraw.MouseButton1Click:Connect(function()
        DrawSettings.GlobalRenders[i].BULLET_INSTANCE:Destroy()
        DrawSettings.GlobalRenders[i]=nil
        TempButton:Destroy()
    end)
    local sel = false
    TempButton.MouseButton1Click:Connect(function()
        sel=not sel
        if sel then
            Bullet.Transparency = .1
            Bullet.Color = Color3.new(0.12549, 1, 0.12549)
            TempButton.BackgroundTransparency = .5
            DrawSettings.Selected.Part = Bullet
            DrawSettings.Selected.i = i
        else
            Bullet.Transparency = .93
            DrawSettings.Selected.Part = nil
            DrawSettings.Selected.i = nil
            DrawSettings.Transparency = 0.950
            Bullet.BrickColor = BrickColor.Yellow()
            TempButton.BackgroundTransparency = 0.950
        end
    end)
    DrawSettings.GlobalRenders[i]={
        ["START"] = Start,
        ["END"] = End,
        ["BULLET_INSTANCE"] = Bullet
    }
end



local HttpService = game:GetService("HttpService")

local function vec3_to_table(v)
    if typeof(v) == "Vector3" then
        return {x = v.X, y = v.Y, z = v.Z}
    end
    return nil
end

local function table_to_vec3(t)
    if type(t) == "table" and t.x and t.y and t.z then
        return Vector3.new(t.x, t.y, t.z)
    end
    return nil
end

Buttons.ExportButton.MouseButton1Click:Connect(function()
    local data = {}
    for _, b in ipairs(DrawSettings.GlobalRenders) do
        if b and b.START and b.END then
            table.insert(data, {
                START = vec3_to_table(b.START),
                END   = vec3_to_table(b.END)
            })
        end
    end

    local encoded = HttpService:JSONEncode(data)
    -- wrap setclipboard in pcall (may not be allowed in all environments)
    pcall(function() setclipboard(encoded) end)

    Buttons.ExportButton.Text = "COPIED TO CLIPBOARD!"
    task.delay(2, function()
        Buttons.ExportButton.Text = "EXPORT DRAWINGS"
    end)
end)


Buttons.ImportButton.MouseButton1Click:Connect(function()
    local inputBox = Instance.new("TextBox")
    inputBox.Size = UDim2.new(1, 0, 0, 36)
    inputBox.PlaceholderText = "Paste export code here"
    inputBox.Parent = tabFrames.System
    inputBox.Text = ""
    inputBox.ClearTextOnFocus = false

    inputBox.FocusLost:Connect(function(enterPressed)
        local code = inputBox.Text
        -- decode safely
        local ok, decoded = pcall(function() return HttpService:JSONDecode(code) end)
        if not ok or type(decoded) ~= "table" then
            warn("Import failed: invalid JSON")
            inputBox:Destroy()
            return
        end

        for _, v in ipairs(decoded) do
            local startV = table_to_vec3(v.START)
            local endV   = table_to_vec3(v.END)
            if startV and endV then
                local bullet = Instance.new("Part", workspace)
                local mesh = Instance.new("BlockMesh", bullet)
                mesh.Scale = Vector3.new(.5, .5, 1)
                bullet.Name = "RayPart"
                bullet.BrickColor = BrickColor.Yellow()
                bullet.Material = Enum.Material.Neon
                bullet.Anchored = true
                bullet.CanCollide = false
                bullet.Transparency = .5
                bullet.formFactor = Enum.FormFactor.Custom
                local distance = (endV - startV).Magnitude
                bullet.Size = Vector3.new(.2, .2, distance)
                bullet.CFrame = CFrame.new(endV, startV) * CFrame.new(0,0,-distance/2)
                game:GetService("Debris"):AddItem(bullet, .25)

                -- IMPORTANT: store in GlobalRenders so ActiveRender re-fires them
                AddBulletToTable(startV, endV, bullet)

                bullet.Transparency = .93
            end
        end

        inputBox:Destroy()
    end)
end)


-- === FULL HAVOC (MULTI-SPOT) ===
Buttons.FullHavocButton.MouseButton1Click:Connect(function()
    if not DrawSettings.FullHavocLoop then
        DrawSettings.FullHavocLoop = true
        DrawSettings.FullHavocPlacement = true

        DrawSettings.FullHavocEntries = {}
        DrawSettings.FullHavocNextId = 0

        Buttons.FullHavocButton.Text = "LEFT-CLICK: ADD • RIGHT-CLICK: REMOVE (Press E to stop placing)"
        Buttons.FullHavocButton.TextColor3 = Color3.fromRGB(255, 255, 125)

        DrawSettings.FullHavocClickConn = game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
            if gameProcessed then return end

            -- Left click: add origin
            if DrawSettings.FullHavocPlacement and input.UserInputType == Enum.UserInputType.MouseButton1 and not DrawSettings.HoveringOverGui then
                local mouse = plr:GetMouse()
                local origin = Vector3.new(mouse.Hit.p.X, mouse.Hit.p.Y, mouse.Hit.p.Z)

                DrawSettings.FullHavocNextId += 1
                local id = DrawSettings.FullHavocNextId
                local loopName = "FullHavoc_" .. tostring(id)

                table.insert(DrawSettings.FullHavocEntries, {id = id, origin = origin, loopName = loopName})

                Buttons.FullHavocButton.Text = "HAVOC SPOTS: " .. tostring(#DrawSettings.FullHavocEntries) .. " (Press E to stop placing)"
                Buttons.FullHavocButton.TextColor3 = Color3.fromRGB(73, 255, 125)

                startLoop(loopName, function(loop)
                    while loop.running do
                        local args = {}
                        for i = 1, 100 do
                            local randomVec = origin + Vector3.new(
                                math.random(-150, 150),
                                math.random(-75, 75),
                                math.random(-150, 150)
                            )
                            local dir = (randomVec - origin)
                            if dir.Magnitude > 0 then
                                local perp = math.abs(dir.Unit.Y) < 0.99 and dir.Unit:Cross(Vector3.new(0, 1, 0)).Unit or dir.Unit:Cross(Vector3.new(1, 0, 0)).Unit
                                for j = 1, 25 do
                                    local offset = (((j - 1) / 24) - 0.5) * 1.5
                                    table.insert(args, {START = origin + perp * offset, END = randomVec + perp * offset})
                                end
                            end
                        end
                        Fire_Replicated_Bullet(args, DrawSettings.DOKILL)
                        for _ = 1, 5 do if not loop.running then return end task.wait(0.05) end
                    end
                end)
            end

            -- Right click: remove last
            if DrawSettings.FullHavocPlacement and input.UserInputType == Enum.UserInputType.MouseButton2 and not DrawSettings.HoveringOverGui then
                local entries = DrawSettings.FullHavocEntries
                if entries and #entries > 0 then
                    local entry = table.remove(entries)
                    if entry and entry.loopName then
                        stopLoop(entry.loopName)
                    end
                    Buttons.FullHavocButton.Text = "HAVOC SPOTS: " .. tostring(#entries) .. " (Press E to stop placing)"
                end
            end

            -- Press E: exit placement mode, keep loops running
            if input.KeyCode == Enum.KeyCode.E and DrawSettings.FullHavocPlacement then
                DrawSettings.FullHavocPlacement = false
                Buttons.FullHavocButton.Text = "HAVOC SPOTS: " .. tostring(#DrawSettings.FullHavocEntries)
            end
        end)

    else
        -- Toggle off: stop all
        DrawSettings.FullHavocLoop = false
        DrawSettings.FullHavocPlacement = false

        Buttons.FullHavocButton.Text = "FULL HAVOC: OFF"
        Buttons.FullHavocButton.TextColor3 = Color3.fromRGB(255, 100, 100)

        if DrawSettings.FullHavocClickConn then
            DrawSettings.FullHavocClickConn:Disconnect()
            DrawSettings.FullHavocClickConn = nil
        end

        if DrawSettings.FullHavocEntries then
            for _, entry in ipairs(DrawSettings.FullHavocEntries) do
                if entry and entry.loopName then
                    stopLoop(entry.loopName)
                end
            end
        end

        DrawSettings.FullHavocEntries = nil
    end
end)


-- === EXTRA TERROR FEATURE ===
-- === EXTRA TERROR (MULTI-SPOT) ===
-- === EXTRA TERROR (MULTI-SPOT) ===
Buttons.ExtraTerrorButton.MouseButton1Click:Connect(function()
    if not DrawSettings.ExtraTerrorLoop then
        DrawSettings.ExtraTerrorLoop = true
        DrawSettings.ExtraTerrorPlacement = true

        DrawSettings.ExtraTerrorEntries = {}
        DrawSettings.ExtraTerrorNextId = 0

        Buttons.ExtraTerrorButton.Text = "LEFT-CLICK: ADD • RIGHT-CLICK: REMOVE (Press E to stop placing)"
        Buttons.ExtraTerrorButton.TextColor3 = Color3.fromRGB(255, 255, 125)

        DrawSettings.ExtraTerrorClickConn = game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
            if gameProcessed then return end

            -- Left click: add origin
            if DrawSettings.ExtraTerrorPlacement and input.UserInputType == Enum.UserInputType.MouseButton1 and not DrawSettings.HoveringOverGui then
                local mouse = plr:GetMouse()
                local origin = Vector3.new(mouse.Hit.p.X, mouse.Hit.p.Y, mouse.Hit.p.Z)

                DrawSettings.ExtraTerrorNextId += 1
                local id = DrawSettings.ExtraTerrorNextId
                local loopName = "ExtraTerror_" .. tostring(id)

                table.insert(DrawSettings.ExtraTerrorEntries, {id = id, origin = origin, loopName = loopName})

                Buttons.ExtraTerrorButton.Text = "TERROR SPOTS: " .. tostring(#DrawSettings.ExtraTerrorEntries) .. " (Press E to stop placing)"
                Buttons.ExtraTerrorButton.TextColor3 = Color3.fromRGB(73, 255, 125)

                startLoop(loopName, function(loop)
                    local directions = 40
                    local boldness = 20
                    while loop.running do
                        local args = {}
                        for i = 1, directions do
                            local randomVec = origin + Vector3.new(
                                math.random(-150, 150),
                                math.random(-75, 75),
                                math.random(-150, 150)
                            )
                            local dir = (randomVec - origin)
                            if dir.Magnitude > 0 then
                                local perp = math.abs(dir.Unit.Y) < 0.99 and dir.Unit:Cross(Vector3.new(0, 1, 0)).Unit or dir.Unit:Cross(Vector3.new(1, 0, 0)).Unit
                                for j = 1, boldness do
                                    local offset = (((j - 1) / (boldness - 1)) - 0.5) * 1.5
                                    table.insert(args, {START = origin + perp * offset, END = randomVec + perp * offset})
                                end
                            end
                        end
                        Fire_Replicated_Bullet(args, DrawSettings.DOKILL)
                        task.wait(0.2)
                        directions += 20
                        boldness += 10
                    end
                end)
            end

            -- Right click: remove last
            if DrawSettings.ExtraTerrorPlacement and input.UserInputType == Enum.UserInputType.MouseButton2 and not DrawSettings.HoveringOverGui then
                local entries = DrawSettings.ExtraTerrorEntries
                if entries and #entries > 0 then
                    local entry = table.remove(entries)
                    if entry and entry.loopName then
                        stopLoop(entry.loopName)
                    end
                    Buttons.ExtraTerrorButton.Text = "TERROR SPOTS: " .. tostring(#entries) .. " (Press E to stop placing)"
                end
            end

            -- Press E: exit placement mode, keep loops running
            if input.KeyCode == Enum.KeyCode.E and DrawSettings.ExtraTerrorPlacement then
                DrawSettings.ExtraTerrorPlacement = false
                Buttons.ExtraTerrorButton.Text = "TERROR SPOTS: " .. tostring(#DrawSettings.ExtraTerrorEntries)
            end
        end)

    else
        -- Toggle off: stop all
        DrawSettings.ExtraTerrorLoop = false
        DrawSettings.ExtraTerrorPlacement = false

        Buttons.ExtraTerrorButton.Text = "EXTRA TERROR: OFF"
        Buttons.ExtraTerrorButton.TextColor3 = Color3.fromRGB(255, 50, 50)

        if DrawSettings.ExtraTerrorClickConn then
            DrawSettings.ExtraTerrorClickConn:Disconnect()
            DrawSettings.ExtraTerrorClickConn = nil
        end

        if DrawSettings.ExtraTerrorEntries then
            for _, entry in ipairs(DrawSettings.ExtraTerrorEntries) do
                if entry and entry.loopName then
                    stopLoop(entry.loopName)
                end
            end
        end

        DrawSettings.ExtraTerrorEntries = nil
    end
end)





-- Button Handlers

Buttons.ImportStarsButton.MouseButton1Click:Connect(function()
    local starsData = [[
[{"END":{"y":162.29769897460938,"x":801.9617919921875,"z":2665.800048828125},"START":{"y":246.9193115234375,"x":742.89697265625,"z":2665.800048828125}},{"END":{"y":165.9528350830078,"x":664.862548828125,"z":2665.800048828125},"START":{"y":248.66000366210938,"x":742.4473876953125,"z":2665.800048828125}},{"END":{"y":223.48736572265626,"x":615.8935546875,"z":2665.800048828125},"START":{"y":205.92544555664063,"x":871.72509765625,"z":2665.800048828125}},{"END":{"y":162.71600341796876,"x":801.964599609375,"z":2665.800048828125},"START":{"y":223.48736572265626,"x":615.8935546875,"z":2665.800048828125}},{"END":{"y":165.9343719482422,"x":665.917236328125,"z":2665.800048828125},"START":{"y":205.9525146484375,"x":870.5381469726563,"z":2665.699951171875}},{"END":{"y":166.89488220214845,"x":606.6522216796875,"z":2665.800048828125},"START":{"y":292.9855651855469,"x":481.4969787597656,"z":2665.800048828125}},{"END":{"y":183.041259765625,"x":275.8147277832031,"z":2665.800048828125},"START":{"y":288.1243591308594,"x":485.9349060058594,"z":2665.800048828125}},{"END":{"y":278.6279296875,"x":298.3484191894531,"z":2665.800048828125},"START":{"y":229.20059204101563,"x":607.6714477539063,"z":2665.800048828125}},{"END":{"y":235.30467224121095,"x":582.0130615234375,"z":2665.800048828125},"START":{"y":293.33428955078127,"x":245.04934692382813,"z":2665.800048828125}},{"END":{"y":181.9306640625,"x":278.2366638183594,"z":2665.800048828125},"START":{"y":236.31582641601563,"x":575.6702880859375,"z":2665.699951171875}},{"END":{"y":291.1719665527344,"x":257.9146728515625,"z":2665.699951171875},"START":{"y":169.08401489257813,"x":601.681884765625,"z":2665.800048828125}},{"END":{"y":168.7259521484375,"x":1054.1966552734376,"z":2665.800048828125},"START":{"y":240.55503845214845,"x":971.1478271484375,"z":2665.800048828125}},{"END":{"y":152.88485717773438,"x":914.3896484375,"z":2665.800048828125},"START":{"y":241.4568634033203,"x":971.1365966796875,"z":2665.800048828125}},{"END":{"y":199.27989196777345,"x":908.107421875,"z":2665.800048828125},"START":{"y":240.1948699951172,"x":1098.6998291015626,"z":2665.800048828125}},{"END":{"y":168.70896911621095,"x":1054.09814453125,"z":2665.699951171875},"START":{"y":199.27989196777345,"x":908.107421875,"z":2665.800048828125}},{"END":{"y":151.62612915039063,"x":912.0587158203125,"z":2665.800048828125},"START":{"y":242.7374267578125,"x":1101.5745849609376,"z":2665.800048828125}},{"END":{"y":97.55571746826172,"x":805.65869140625,"z":2577.60009765625},"START":{"y":118.4307861328125,"x":786.7131958007813,"z":2577.60009765625}},{"END":{"y":96.19095611572266,"x":770.5746459960938,"z":2577.60009765625},"START":{"y":118.56414794921875,"x":786.652587890625,"z":2577.60009765625}},{"END":{"y":112.69136047363281,"x":768.1947021484375,"z":2577.60009765625},"START":{"y":113.42953491210938,"x":805.8106079101563,"z":2577.60009765625}},{"END":{"y":97.51261901855469,"x":805.7816162109375,"z":2577.60009765625},"START":{"y":112.69136047363281,"x":768.1947021484375,"z":2577.60009765625}},{"END":{"y":96.32599639892578,"x":770.729736328125,"z":2577.5},"START":{"y":113.41404724121094,"x":805.7880859375,"z":2577.5}},{"END":{"y":96.55655670166016,"x":758.0098266601563,"z":2577.60009765625},"START":{"y":119.40733337402344,"x":738.11181640625,"z":2577.60009765625}},{"END":{"y":96.54053497314453,"x":721.3197021484375,"z":2577.60009765625},"START":{"y":119.5333251953125,"x":738.2404174804688,"z":2577.60009765625}},{"END":{"y":111.46611022949219,"x":720.2418212890625,"z":2577.60009765625},"START":{"y":111.6484375,"x":758.999755859375,"z":2577.60009765625}},{"END":{"y":96.42037963867188,"x":758.1442260742188,"z":2577.60009765625},"START":{"y":111.46611022949219,"x":720.2418212890625,"z":2577.60009765625}},{"END":{"y":96.2815170288086,"x":721.304931640625,"z":2577.60009765625},"START":{"y":111.9074478149414,"x":759.00048828125,"z":2577.60009765625}},{"END":{"y":105.03870391845703,"x":812.511962890625,"z":2284.199951171875},"START":{"y":113.30545043945313,"x":819.1943969726563,"z":2284.199951171875}},{"END":{"y":104.81180572509766,"x":824.6469116210938,"z":2284.199951171875},"START":{"y":113.23463439941406,"x":819.2667846679688,"z":2284.199951171875}},{"END":{"y":110.2206802368164,"x":826.7562866210938,"z":2284.199951171875},"START":{"y":110.44403076171875,"x":810.701904296875,"z":2284.199951171875}},{"END":{"y":104.89061737060547,"x":812.4335327148438,"z":2284.199951171875},"START":{"y":110.2206802368164,"x":826.7562866210938,"z":2284.199951171875}},{"END":{"y":104.81068420410156,"x":824.639892578125,"z":2284.300048828125},"START":{"y":110.50016021728516,"x":810.8790283203125,"z":2284.300048828125}},{"END":{"y":104.58719635009766,"x":846.2293701171875,"z":2284.199951171875},"START":{"y":113.05329132080078,"x":852.5755004882813,"z":2284.199951171875}},{"END":{"y":104.51327514648438,"x":859.1879272460938,"z":2284.199951171875},"START":{"y":113.12158203125,"x":852.5733032226563,"z":2284.199951171875}},{"END":{"y":110.18806457519531,"x":860.9871826171875,"z":2284.199951171875},"START":{"y":110.42056274414063,"x":842.7230224609375,"z":2284.199951171875}},{"END":{"y":104.37049102783203,"x":859.154541015625,"z":2284.300048828125},"START":{"y":110.4051284790039,"x":842.794677734375,"z":2284.300048828125}},{"END":{"y":104.51505279541016,"x":846.302734375,"z":2284.199951171875},"START":{"y":110.1739273071289,"x":860.872802734375,"z":2284.300048828125}},{"END":{"y":104.20594024658203,"x":863.6002197265625,"z":2258.01220703125},"START":{"y":112.90448760986328,"x":863.6002197265625,"z":2265.480224609375}},{"END":{"y":103.97734069824219,"x":863.6002197265625,"z":2272.060546875},"START":{"y":112.83586120605469,"x":863.6002197265625,"z":2265.48095703125}},{"END":{"y":110.61334991455078,"x":863.6002197265625,"z":2273.755859375},"START":{"y":110.91104888916016,"x":863.6002197265625,"z":2255.834228515625}},{"END":{"y":104.21149444580078,"x":863.500244140625,"z":2258.033203125},"START":{"y":110.61334991455078,"x":863.6002197265625,"z":2273.755859375}},{"END":{"y":104.0500717163086,"x":863.6002197265625,"z":2271.8369140625},"START":{"y":110.82927703857422,"x":863.500244140625,"z":2255.857666015625}},{"END":{"y":104.70597839355469,"x":859.2688598632813,"z":2344.400146484375},"START":{"y":112.70159912109375,"x":851.8880615234375,"z":2344.400146484375}},{"END":{"y":104.83181762695313,"x":845.5933837890625,"z":2344.400146484375},"START":{"y":112.7601547241211,"x":851.949951171875,"z":2344.400146484375}},{"END":{"y":110.24545288085938,"x":843.7103271484375,"z":2344.400146484375},"START":{"y":110.26988220214844,"x":859.5350341796875,"z":2344.400146484375}},{"END":{"y":104.76947021484375,"x":859.24609375,"z":2344.300048828125},"START":{"y":110.24545288085938,"x":843.7103271484375,"z":2344.400146484375}},{"END":{"y":104.89405822753906,"x":845.6763305664063,"z":2344.300048828125},"START":{"y":110.33027648925781,"x":859.59619140625,"z":2344.400146484375}},{"END":{"y":104.70723724365235,"x":822.3887939453125,"z":2344.400146484375},"START":{"y":112.86236572265625,"x":816.5174560546875,"z":2344.400146484375}},{"END":{"y":104.88768768310547,"x":810.3167114257813,"z":2344.400146484375},"START":{"y":112.86236572265625,"x":816.5174560546875,"z":2344.400146484375}},{"END":{"y":110.35890197753906,"x":810.1826782226563,"z":2344.400146484375},"START":{"y":110.49844360351563,"x":824.6532592773438,"z":2344.400146484375}},{"END":{"y":104.70723724365235,"x":822.4506225585938,"z":2344.400146484375},"START":{"y":110.34260559082031,"x":810.21875,"z":2344.300048828125}},{"END":{"y":104.88762664794922,"x":810.443359375,"z":2344.382568359375},"START":{"y":110.42460632324219,"x":824.6476440429688,"z":2344.300048828125}},{"END":{"y":105.2071762084961,"x":779.8003540039063,"z":2369.653564453125},"START":{"y":112.79999542236328,"x":780.6442260742188,"z":2362.914794921875}},{"END":{"y":104.98090362548828,"x":779.8003540039063,"z":2356.248779296875},"START":{"y":112.79999542236328,"x":781.0179443359375,"z":2362.923828125}},{"END":{"y":111.12809753417969,"x":779.8003540039063,"z":2353.71337890625},"START":{"y":111.30947875976563,"x":779.8003540039063,"z":2371.601806640625}},{"END":{"y":105.04901123046875,"x":779.8003540039063,"z":2369.657470703125},"START":{"y":111.12809753417969,"x":779.8003540039063,"z":2353.71337890625}},{"END":{"y":104.98077392578125,"x":779.8003540039063,"z":2356.412353515625},"START":{"y":111.29351043701172,"x":779.9003295898438,"z":2371.5849609375}},{"END":{"y":100.38349914550781,"x":809.927490234375,"z":2376.60009765625},"START":{"y":109.16545867919922,"x":802.0719604492188,"z":2376.60009765625}},{"END":{"y":100.25625610351563,"x":795.8796997070313,"z":2376.60009765625},"START":{"y":109.0703125,"x":802.0230102539063,"z":2376.60009765625}},{"END":{"y":106.42115783691406,"x":794.47119140625,"z":2376.60009765625},"START":{"y":106.31117248535156,"x":810.7579345703125,"z":2376.60009765625}},{"END":{"y":100.43351745605469,"x":810.0772705078125,"z":2376.60009765625},"START":{"y":106.42115783691406,"x":794.47119140625,"z":2376.60009765625}},{"END":{"y":100.2063980102539,"x":795.8785400390625,"z":2376.60009765625},"START":{"y":106.25008392333985,"x":810.5836791992188,"z":2376.5}},{"END":{"y":100.0737533569336,"x":849.7778930664063,"z":2376.60009765625},"START":{"y":109.30155181884766,"x":840.4093017578125,"z":2376.60009765625}},{"END":{"y":100.10247039794922,"x":832.79443359375,"z":2376.60009765625},"START":{"y":109.30155181884766,"x":840.4093017578125,"z":2376.60009765625}},{"END":{"y":107.29977416992188,"x":831.15966796875,"z":2376.60009765625},"START":{"y":107.35872650146485,"x":848.1742553710938,"z":2376.60009765625}},{"END":{"y":99.9931869506836,"x":832.7047119140625,"z":2376.60009765625},"START":{"y":107.2907943725586,"x":848.0841674804688,"z":2376.5}},{"END":{"y":100.02456665039063,"x":849.79638671875,"z":2376.60009765625},"START":{"y":107.22876739501953,"x":831.2828979492188,"z":2376.5}},{"END":{"y":99.44097900390625,"x":969.8001708984375,"z":2381.006103515625},"START":{"y":112.37720489501953,"x":969.8001708984375,"z":2391.22412109375}},{"END":{"y":99.1326675415039,"x":969.8001708984375,"z":2401.0341796875},"START":{"y":112.37720489501953,"x":969.8001708984375,"z":2391.22412109375}},{"END":{"y":108.3713607788086,"x":969.8001708984375,"z":2402.582275390625},"START":{"y":108.10155487060547,"x":969.8001708984375,"z":2380.03857421875}},{"END":{"y":99.53239440917969,"x":969.7001953125,"z":2381.094482421875},"START":{"y":108.2940902709961,"x":969.8001708984375,"z":2402.6689453125}},{"END":{"y":98.96695709228516,"x":969.8001708984375,"z":2400.958984375},"START":{"y":108.16859436035156,"x":969.7001953125,"z":2380.0498046875}},{"END":{"y":99.80867767333985,"x":997.8001708984375,"z":2353.845458984375},"START":{"y":108.48097229003906,"x":997.8001708984375,"z":2361.70703125}},{"END":{"y":99.70555114746094,"x":997.8001708984375,"z":2369.626708984375},"START":{"y":108.40465545654297,"x":997.8001708984375,"z":2361.7861328125}},{"END":{"y":105.78619384765625,"x":997.8001708984375,"z":2372.409912109375},"START":{"y":106.20874786376953,"x":997.8001708984375,"z":2350.08251953125}},{"END":{"y":99.64698791503906,"x":997.8001708984375,"z":2353.760498046875},"START":{"y":105.78619384765625,"x":997.8001708984375,"z":2372.409912109375}},{"END":{"y":99.70663452148438,"x":997.8001708984375,"z":2369.459716796875},"START":{"y":106.20508575439453,"x":997.7001953125,"z":2350.1806640625}},{"END":{"y":99.73285675048828,"x":863.8001708984375,"z":2401.851806640625},"START":{"y":112.53176879882813,"x":863.8001708984375,"z":2392.2802734375}},{"END":{"y":98.94844055175781,"x":863.8001708984375,"z":2381.91162109375},"START":{"y":112.52874755859375,"x":863.8001708984375,"z":2392.2802734375}},{"END":{"y":108.96489715576172,"x":863.8001708984375,"z":2379.3583984375},"START":{"y":108.99735260009766,"x":863.8001708984375,"z":2404.014404296875}},{"END":{"y":99.6438217163086,"x":863.8001708984375,"z":2402.033203125},"START":{"y":108.96489715576172,"x":863.8001708984375,"z":2379.3583984375}},{"END":{"y":98.8631362915039,"x":863.8001708984375,"z":2381.831298828125},"START":{"y":109.04997253417969,"x":863.8001708984375,"z":2404.174072265625}},{"END":{"y":100.01675415039063,"x":875.3494262695313,"z":2346.60009765625},"START":{"y":111.23912811279297,"x":883.5300903320313,"z":2346.60009765625}},{"END":{"y":99.72867584228516,"x":891.8361206054688,"z":2346.60009765625},"START":{"y":111.17951965332031,"x":883.5313720703125,"z":2346.60009765625}},{"END":{"y":107.7263412475586,"x":893.2092895507813,"z":2346.60009765625},"START":{"y":107.5872802734375,"x":872.580078125,"z":2346.60009765625}},{"END":{"y":99.95021057128906,"x":875.2156982421875,"z":2346.60009765625},"START":{"y":107.7263412475586,"x":893.2092895507813,"z":2346.60009765625}},{"END":{"y":99.72859191894531,"x":891.9029541015625,"z":2346.60009765625},"START":{"y":107.64089965820313,"x":872.6005859375,"z":2346.7001953125}},{"END":{"y":108.8630599975586,"x":899.27978515625,"z":2244.596435546875},"START":{"y":125.93579864501953,"x":914.8458251953125,"z":2244.596435546875}},{"END":{"y":108.99755096435547,"x":928.5647583007813,"z":2244.596435546875},"START":{"y":125.8016586303711,"x":914.84716796875,"z":2244.596435546875}},{"END":{"y":119.27346801757813,"x":932.0301513671875,"z":2244.596435546875},"START":{"y":119.73092651367188,"x":896.8953247070313,"z":2244.596435546875}},{"END":{"y":108.86302185058594,"x":899.423095703125,"z":2244.596435546875},"START":{"y":119.27346801757813,"x":932.0301513671875,"z":2244.596435546875}},{"END":{"y":108.83895874023438,"x":928.6832885742188,"z":2244.596435546875},"START":{"y":119.72245788574219,"x":897.0061645507813,"z":2244.696533203125}},{"END":{"y":108.86844635009766,"x":933.5726318359375,"z":2244.596435546875},"START":{"y":126.3897476196289,"x":947.32080078125,"z":2244.596435546875}},{"END":{"y":109.28633880615235,"x":962.2554321289063,"z":2244.596435546875},"START":{"y":126.25569915771485,"x":947.1881713867188,"z":2244.596435546875}},{"END":{"y":118.93367004394531,"x":934.4408569335938,"z":2244.596435546875},"START":{"y":118.90238189697266,"x":959.0602416992188,"z":2244.596435546875}},{"END":{"y":109.28305053710938,"x":962.198974609375,"z":2244.696533203125},"START":{"y":118.93367004394531,"x":934.4408569335938,"z":2244.596435546875}},{"END":{"y":109.0074234008789,"x":933.691650390625,"z":2244.696533203125},"START":{"y":119.03966522216797,"x":959.0512084960938,"z":2244.596435546875}},{"END":{"y":110.13365936279297,"x":869.7752685546875,"z":2244.596435546875},"START":{"y":126.383544921875,"x":882.0435180664063,"z":2244.596435546875}},{"END":{"y":108.84837341308594,"x":893.2853393554688,"z":2244.596435546875},"START":{"y":126.26406860351563,"x":881.9171142578125,"z":2244.596435546875}},{"END":{"y":119.8209228515625,"x":893.5327758789063,"z":2244.596435546875},"START":{"y":119.61981201171875,"x":869.5308837890625,"z":2244.596435546875}},{"END":{"y":109.88002014160156,"x":869.5092163085938,"z":2244.596435546875},"START":{"y":119.79847717285156,"x":893.5234375,"z":2244.696533203125}},{"END":{"y":108.7212905883789,"x":893.2869262695313,"z":2244.596435546875},"START":{"y":119.86531066894531,"x":869.5379638671875,"z":2244.596435546875}},{"END":{"y":98.70429229736328,"x":960.1707763671875,"z":2406.60009765625},"START":{"y":112.5793228149414,"x":947.8815307617188,"z":2406.60009765625}},{"END":{"y":98.20301818847656,"x":937.7384643554688,"z":2406.60009765625},"START":{"y":112.57835388183594,"x":947.81787109375,"z":2406.60009765625}},{"END":{"y":107.01693725585938,"x":935.8816528320313,"z":2406.60009765625},"START":{"y":107.33850860595703,"x":961.8143920898438,"z":2406.60009765625}},{"END":{"y":98.79000091552735,"x":960.126220703125,"z":2406.5},"START":{"y":107.01693725585938,"x":935.8816528320313,"z":2406.60009765625}},{"END":{"y":98.0673828125,"x":937.7343139648438,"z":2406.60009765625},"START":{"y":107.39537811279297,"x":961.70361328125,"z":2406.5}},{"END":{"y":98.535400390625,"x":926.0660400390625,"z":2504.60009765625},"START":{"y":112.4095230102539,"x":916.4940795898438,"z":2504.60009765625}},{"END":{"y":98.25840759277344,"x":906.2968139648438,"z":2504.60009765625},"START":{"y":112.4095230102539,"x":916.4940795898438,"z":2504.60009765625}},{"END":{"y":108.15425109863281,"x":904.9560546875,"z":2504.60009765625},"START":{"y":107.89409637451172,"x":929.5271606445313,"z":2504.60009765625}},{"END":{"y":98.44349670410156,"x":926.0686645507813,"z":2504.60009765625},"START":{"y":108.15425109863281,"x":904.9560546875,"z":2504.60009765625}},{"END":{"y":98.07418823242188,"x":906.2904052734375,"z":2504.60009765625},"START":{"y":108.06690216064453,"x":929.5200805664063,"z":2504.60009765625}},{"END":{"y":196.17604064941407,"x":1255.3626708984376,"z":2008.128173828125},"START":{"y":327.351806640625,"x":1255.3626708984376,"z":2176.82421875}},{"END":{"y":182.17031860351563,"x":1255.3626708984376,"z":2261.224609375},"START":{"y":328.656982421875,"x":1255.3626708984376,"z":2176.617431640625}},{"END":{"y":256.6748962402344,"x":1255.3626708984376,"z":2280.44873046875},"START":{"y":345.7572937011719,"x":1255.3626708984376,"z":1939.2657470703126}},{"END":{"y":195.85824584960938,"x":1255.3626708984376,"z":2010.6551513671876},"START":{"y":256.6748962402344,"x":1255.3626708984376,"z":2280.44873046875}},{"END":{"y":182.732421875,"x":1255.3626708984376,"z":2262.68505859375},"START":{"y":345.18548583984377,"x":1255.3626708984376,"z":1942.0299072265626}},{"END":{"y":193.34786987304688,"x":1255.3626708984376,"z":2405.497802734375},"START":{"y":356.3341064453125,"x":1255.3626708984376,"z":2542.307861328125}},{"END":{"y":195.8813018798828,"x":1255.3626708984376,"z":2646.697265625},"START":{"y":355.4296875,"x":1255.3626708984376,"z":2538.5712890625}},{"END":{"y":291.6622619628906,"x":1255.3626708984376,"z":2661.045166015625},"START":{"y":286.98663330078127,"x":1255.3626708984376,"z":2394.852294921875}},{"END":{"y":194.02139282226563,"x":1255.3626708984376,"z":2405.505615234375},"START":{"y":290.93939208984377,"x":1255.3626708984376,"z":2661.74609375}},{"END":{"y":197.29266357421876,"x":1255.3626708984376,"z":2646.807861328125},"START":{"y":289.89910888671877,"x":1255.3626708984376,"z":2397.6328125}},{"END":{"y":130.63990783691407,"x":843.90478515625,"z":2527.779541015625},"START":{"y":130.63990783691407,"x":821.298095703125,"z":2451.004150390625}},{"END":{"y":130.63990783691407,"x":786.9036865234375,"z":2538.54833984375},"START":{"y":130.63990783691407,"x":821.31884765625,"z":2450.581787109375}},{"END":{"y":130.63990783691407,"x":797.5975341796875,"z":2474.822509765625},"START":{"y":130.63990783691407,"x":846.1333618164063,"z":2473.654052734375}},{"END":{"y":130.63990783691407,"x":797.7413940429688,"z":2475.169189453125},"START":{"y":130.63990783691407,"x":843.482666015625,"z":2527.28125}},{"END":{"y":130.63990783691407,"x":787.2330932617188,"z":2537.4140625},"START":{"y":130.63990783691407,"x":846.1621704101563,"z":2473.47607421875}},{"END":{"y":130.63990783691407,"x":769.8613891601563,"z":2533.46142578125},"START":{"y":130.63990783691407,"x":754.3433837890625,"z":2470.010986328125}},{"END":{"y":132.63990783691407,"x":720.0623779296875,"z":2551.250244140625},"START":{"y":130.63990783691407,"x":754.4654541015625,"z":2470.01220703125}},{"END":{"y":132.63990783691407,"x":731.1873168945313,"z":2487.02197265625},"START":{"y":130.63990783691407,"x":769.1987915039063,"z":2481.7587890625}},{"END":{"y":130.63990783691407,"x":769.625,"z":2533.459228515625},"START":{"y":132.63990783691407,"x":731.1873168945313,"z":2487.02197265625}},{"END":{"y":132.63990783691407,"x":720.3322143554688,"z":2551.252685546875},"START":{"y":130.63990783691407,"x":769.3418579101563,"z":2481.76025390625}},{"END":{"y":152.1340789794922,"x":185.874755859375,"z":2665.800048828125},"START":{"y":279.7445068359375,"x":81.01959228515625,"z":2665.800048828125}},{"END":{"y":150.00131225585938,"x":21.02264404296875,"z":2665.800048828125},"START":{"y":277.7238464355469,"x":80.71528625488281,"z":2665.800048828125}},{"END":{"y":243.64920043945313,"x":7.84393310546875,"z":2665.800048828125},"START":{"y":229.10174560546876,"x":206.835205078125,"z":2665.800048828125}},{"END":{"y":154.15579223632813,"x":185.76824951171876,"z":2665.800048828125},"START":{"y":243.64920043945313,"x":7.84393310546875,"z":2665.800048828125}},{"END":{"y":152.61669921875,"x":22.226247787475587,"z":2665.699951171875},"START":{"y":229.03640747070313,"x":207.35040283203126,"z":2665.800048828125}},{"END":{"y":152.96957397460938,"x":-28.239105224609376,"z":2665.800048828125},"START":{"y":272.91339111328127,"x":-127.47970581054688,"z":2665.800048828125}},{"END":{"y":147.1121063232422,"x":-199.04721069335938,"z":2665.800048828125},"START":{"y":272.7992248535156,"x":-126.72079467773438,"z":2665.800048828125}},{"END":{"y":235.91513061523438,"x":-221.06549072265626,"z":2665.800048828125},"START":{"y":225.59315490722657,"x":-26.1663818359375,"z":2665.800048828125}},{"END":{"y":154.31494140625,"x":-26.97509765625,"z":2665.800048828125},"START":{"y":235.91513061523438,"x":-221.06549072265626,"z":2665.800048828125}},{"END":{"y":146.018310546875,"x":-199.43963623046876,"z":2665.800048828125},"START":{"y":226.28460693359376,"x":-27.2564697265625,"z":2665.800048828125}},{"END":{"y":144.2518310546875,"x":-225.90579223632813,"z":2665.800048828125},"START":{"y":244.1009521484375,"x":-298.5954284667969,"z":2665.800048828125}},{"END":{"y":147.9212646484375,"x":-365.9696350097656,"z":2665.800048828125},"START":{"y":245.36773681640626,"x":-299.7283630371094,"z":2665.800048828125}},{"END":{"y":216.7090301513672,"x":-359.3180236816406,"z":2665.800048828125},"START":{"y":216.03111267089845,"x":-220.30679321289063,"z":2665.800048828125}},{"END":{"y":145.22750854492188,"x":-226.25787353515626,"z":2665.800048828125},"START":{"y":216.7090301513672,"x":-359.3180236816406,"z":2665.800048828125}},{"END":{"y":150.765869140625,"x":-364.0150451660156,"z":2665.699951171875},"START":{"y":215.9829864501953,"x":-221.2836456298828,"z":2665.699951171875}},{"END":{"y":156.20379638671876,"x":-398.0742492675781,"z":2665.800048828125},"START":{"y":254.23336791992188,"x":-476.5675354003906,"z":2665.800048828125}},{"END":{"y":162.28335571289063,"x":-533.021240234375,"z":2665.800048828125},"START":{"y":255.45791625976563,"x":-476.1623229980469,"z":2665.800048828125}},{"END":{"y":217.46044921875,"x":-541.4801025390625,"z":2665.800048828125},"START":{"y":211.2838134765625,"x":-386.4789733886719,"z":2665.800048828125}},{"END":{"y":155.66046142578126,"x":-396.9945983886719,"z":2665.800048828125},"START":{"y":217.46044921875,"x":-541.4801025390625,"z":2665.800048828125}},{"END":{"y":162.79031372070313,"x":-531.9771728515625,"z":2665.800048828125},"START":{"y":210.81431579589845,"x":-388.0527648925781,"z":2665.800048828125}},{"END":{"y":160.1338653564453,"x":-561.713623046875,"z":2665.800048828125},"START":{"y":267.073974609375,"x":-657.0631103515625,"z":2665.800048828125}},{"END":{"y":169.35597229003907,"x":-720.8590087890625,"z":2665.800048828125},"START":{"y":265.755126953125,"x":-655.658447265625,"z":2665.800048828125}},{"END":{"y":234.4722137451172,"x":-727.3978271484375,"z":2665.800048828125},"START":{"y":227.99986267089845,"x":-590.4974365234375,"z":2665.800048828125}},{"END":{"y":160.18215942382813,"x":-563.322509765625,"z":2665.800048828125},"START":{"y":234.4722137451172,"x":-727.397705078125,"z":2665.800048828125}},{"END":{"y":170.9604034423828,"x":-718.762451171875,"z":2665.800048828125},"START":{"y":227.99986267089845,"x":-590.4974365234375,"z":2665.800048828125}},{"END":{"y":2064.95703125,"x":-6210.89892578125,"z":10409.3349609375},"START":{"y":258.6654357910156,"x":-781.587646484375,"z":2597.800048828125}},{"END":{"y":231.2661590576172,"x":-775.8394775390625,"z":2597.800048828125},"START":{"y":2007.050537109375,"x":-6156.791015625,"z":10463.55859375}},{"END":{"y":241.9551544189453,"x":-802.9832153320313,"z":2597.800048828125},"START":{"y":1919.5643310546876,"x":-6083.8271484375,"z":10545.4892578125}},{"END":{"y":157.87283325195313,"x":-748.8871459960938,"z":2602.31689453125},"START":{"y":247.69442749023438,"x":-819.0244140625,"z":2597.800048828125}},{"END":{"y":164.53622436523438,"x":-877.6754150390625,"z":2597.800048828125},"START":{"y":246.67919921875,"x":-819.4600219726563,"z":2597.800048828125}},{"END":{"y":227.52664184570313,"x":-893.6776123046875,"z":2597.800048828125},"START":{"y":225.5028839111328,"x":-748.8871459960938,"z":2614.437255859375}},{"END":{"y":157.19235229492188,"x":-748.8871459960938,"z":2601.338623046875},"START":{"y":227.51943969726563,"x":-893.6776123046875,"z":2597.800048828125}},{"END":{"y":164.05642700195313,"x":-877.6002807617188,"z":2597.800048828125},"START":{"y":226.0560760498047,"x":-748.8871459960938,"z":2615.634033203125}},{"END":{"y":179.63986206054688,"x":-1009.6371459960938,"z":2587.298583984375},"START":{"y":277.94976806640627,"x":-1009.6371459960938,"z":2497.723876953125}},{"END":{"y":163.83984375,"x":-1009.6371459960938,"z":2432.051025390625},"START":{"y":279.37652587890627,"x":-1009.6371459960938,"z":2498.29638671875}},{"END":{"y":228.03265380859376,"x":-1009.6371459960938,"z":2422.80078125},"START":{"y":272.79522705078127,"x":-1009.6371459960938,"z":2590.400390625}},{"END":{"y":182.66940307617188,"x":-1009.6371459960938,"z":2583.05810546875},"START":{"y":228.03659057617188,"x":-1009.6371459960938,"z":2422.80078125}},{"END":{"y":164.40679931640626,"x":-1009.6371459960938,"z":2432.904541015625},"START":{"y":272.841796875,"x":-1009.6371459960938,"z":2587.77392578125}},{"END":{"y":167.80831909179688,"x":-1009.6371459960938,"z":2382.01416015625},"START":{"y":254.16018676757813,"x":-1009.6371459960938,"z":2312.15185546875}},{"END":{"y":170.13307189941407,"x":-1009.6371459960938,"z":2266.093017578125},"START":{"y":254.0745849609375,"x":-1009.6371459960938,"z":2311.287353515625}},{"END":{"y":218.45526123046876,"x":-1009.6371459960938,"z":2257.26708984375},"START":{"y":227.76486206054688,"x":-1009.6371459960938,"z":2378.013916015625}},{"END":{"y":166.8960723876953,"x":-1009.6371459960938,"z":2384.37060546875},"START":{"y":218.450927734375,"x":-1009.6371459960938,"z":2257.26708984375}},{"END":{"y":169.5556640625,"x":-1009.6371459960938,"z":2266.202880859375},"START":{"y":227.2186279296875,"x":-1009.6371459960938,"z":2377.192626953125}},{"END":{"y":167.76104736328126,"x":-1009.6371459960938,"z":2204.75},"START":{"y":248.18678283691407,"x":-1009.6371459960938,"z":2149.22412109375}},{"END":{"y":165.83102416992188,"x":-1009.6371459960938,"z":2104.345947265625},"START":{"y":247.67388916015626,"x":-1009.6371459960938,"z":2149.138427734375}},{"END":{"y":212.99566650390626,"x":-1009.6371459960938,"z":2093.23876953125},"START":{"y":216.864013671875,"x":-1009.6371459960938,"z":2208.873046875}},{"END":{"y":167.0759735107422,"x":-1009.6371459960938,"z":2205.182373046875},"START":{"y":212.99810791015626,"x":-1009.6371459960938,"z":2093.23876953125}},{"END":{"y":168.47427368164063,"x":-1009.6371459960938,"z":2106.21337890625},"START":{"y":217.76632690429688,"x":-1009.6371459960938,"z":2207.51416015625}},{"END":{"y":158.05758666992188,"x":-1009.6371459960938,"z":2073.5888671875},"START":{"y":244.543212890625,"x":-1009.6371459960938,"z":2011.74755859375}},{"END":{"y":155.760986328125,"x":-1009.6371459960938,"z":1952.7298583984376},"START":{"y":243.6397705078125,"x":-1009.6371459960938,"z":2011.323486328125}},{"END":{"y":206.86911010742188,"x":-1009.6371459960938,"z":1949.932861328125},"START":{"y":208.10000610351563,"x":-1009.6371459960938,"z":2072.978759765625}},{"END":{"y":158.04571533203126,"x":-1009.6371459960938,"z":2074.02734375},"START":{"y":206.845947265625,"x":-1009.6371459960938,"z":1949.932861328125}},{"END":{"y":155.29318237304688,"x":-1009.6371459960938,"z":1951.89697265625},"START":{"y":208.5146484375,"x":-1009.6371459960938,"z":2072.09765625}},{"END":{"y":151.94932556152345,"x":-1009.6371459960938,"z":1930.6219482421876},"START":{"y":250.3610382080078,"x":-1009.6371459960938,"z":1858.443359375}},{"END":{"y":156.66348266601563,"x":-1009.6371459960938,"z":1774.5203857421876},"START":{"y":249.37551879882813,"x":-1009.6371459960938,"z":1858.9605712890626}},{"END":{"y":207.1247100830078,"x":-1009.6371459960938,"z":1778.2552490234376},"START":{"y":202.16949462890626,"x":-1009.6371459960938,"z":1917.6011962890626}},{"END":{"y":151.03616333007813,"x":-1009.6371459960938,"z":1930.836181640625},"START":{"y":207.15115356445313,"x":-1009.6371459960938,"z":1778.2548828125}},{"END":{"y":155.6545867919922,"x":-1009.6371459960938,"z":1773.5689697265626},"START":{"y":203.54241943359376,"x":-1009.6371459960938,"z":1916.227294921875}},{"END":{"y":151.225341796875,"x":-1009.6371459960938,"z":1754.593505859375},"START":{"y":236.84266662597657,"x":-1009.6371459960938,"z":1687.316650390625}},{"END":{"y":161.19552612304688,"x":-1009.6371459960938,"z":1618.221435546875},"START":{"y":237.30645751953126,"x":-1009.6371459960938,"z":1687.331298828125}},{"END":{"y":210.80731201171876,"x":-1009.6371459960938,"z":1619.844970703125},"START":{"y":205.8356475830078,"x":-1009.6371459960938,"z":1754.596435546875}},{"END":{"y":152.17835998535157,"x":-1009.6371459960938,"z":1754.6103515625},"START":{"y":210.77737426757813,"x":-1009.6371459960938,"z":1619.844970703125}},{"END":{"y":160.2003631591797,"x":-1009.6371459960938,"z":1619.8214111328126},"START":{"y":206.31472778320313,"x":-1009.6371459960938,"z":1753.6285400390626}},{"END":{"y":161.72064208984376,"x":-1009.6371459960938,"z":1598.5413818359376},"START":{"y":259.5537109375,"x":-1009.6371459960938,"z":1518.68994140625}},{"END":{"y":159.48843383789063,"x":-1009.6371459960938,"z":1452.52783203125},"START":{"y":258.53778076171877,"x":-1009.6371459960938,"z":1519.2816162109376}},{"END":{"y":226.38233947753907,"x":-1009.6371459960938,"z":1432.672607421875},"START":{"y":221.4806365966797,"x":-1009.6371459960938,"z":1587.5384521484376}},{"END":{"y":161.69215393066407,"x":-1009.6371459960938,"z":1599.5810546875},"START":{"y":226.3598175048828,"x":-1009.6371459960938,"z":1432.672607421875}},{"END":{"y":158.9728240966797,"x":-1009.6371459960938,"z":1453.806396484375},"START":{"y":220.6197967529297,"x":-1009.6371459960938,"z":1586.4854736328126}},{"END":{"y":154.66342163085938,"x":-1009.6371459960938,"z":1418.44482421875},"START":{"y":263.4888916015625,"x":-1009.6371459960938,"z":1340.193115234375}},{"END":{"y":149.1981201171875,"x":-1009.6371459960938,"z":1252.713623046875},"START":{"y":263.4674072265625,"x":-1009.6371459960938,"z":1340.648193359375}},{"END":{"y":223.64797973632813,"x":-1009.6371459960938,"z":1261.3411865234376},"START":{"y":217.44943237304688,"x":-1009.6371459960938,"z":1420.8399658203126}},{"END":{"y":154.66220092773438,"x":-1009.6371459960938,"z":1418.87255859375},"START":{"y":223.63934326171876,"x":-1009.5371704101563,"z":1261.4420166015626}},{"END":{"y":148.27517700195313,"x":-1009.6371459960938,"z":1252.14306640625},"START":{"y":219.11138916015626,"x":-1009.6371459960938,"z":1420.0035400390626}},{"END":{"y":155.47781372070313,"x":-1009.6371459960938,"z":1173.70556640625},"START":{"y":4919.14453125,"x":-5517.56884765625,"z":-6041.6025390625}},{"END":{"y":141.34239196777345,"x":-1009.6371459960938,"z":1177.2137451171876},"START":{"y":357.4552001953125,"x":-1009.6371459960938,"z":990.8981323242188}},{"END":{"y":134.82728576660157,"x":-929.9521484375,"z":918.8001098632813},"START":{"y":360.9881591796875,"x":-1009.6371459960938,"z":988.4904174804688}},{"END":{"y":259.04144287109377,"x":-907.937744140625,"z":918.8001098632813},"START":{"y":247.9402313232422,"x":-1009.6371459960938,"z":1214.770751953125}},{"END":{"y":141.88641357421876,"x":-1009.6371459960938,"z":1176.520263671875},"START":{"y":259.03692626953127,"x":-907.9351196289063,"z":918.8001098632813}},{"END":{"y":135.46682739257813,"x":-929.9183349609375,"z":918.8001098632813},"START":{"y":247.92625427246095,"x":-1009.6371459960938,"z":1218.3582763671876}},{"END":{"y":124.7383804321289,"x":-812.4535522460938,"z":918.8001098632813},"START":{"y":274.6820983886719,"x":-717.2239990234375,"z":918.8002319335938}},{"END":{"y":109.51009368896485,"x":-605.8328857421875,"z":918.8002319335938},"START":{"y":274.78045654296877,"x":-718.5211181640625,"z":918.8002319335938}},{"END":{"y":204.68557739257813,"x":-610.6304931640625,"z":918.8002319335938},"START":{"y":217.51773071289063,"x":-830.417724609375,"z":918.8001098632813}},{"END":{"y":124.78504943847656,"x":-810.8922729492188,"z":918.8001098632813},"START":{"y":204.6803436279297,"x":-610.6304931640625,"z":918.8002319335938}},{"END":{"y":109.41870880126953,"x":-607.4957275390625,"z":918.8002319335938},"START":{"y":216.684814453125,"x":-828.0526123046875,"z":918.8001098632813}},{"END":{"y":117.65754699707031,"x":-548.65771484375,"z":918.8002319335938},"START":{"y":305.7735290527344,"x":-435.5000915527344,"z":918.8001708984375}},{"END":{"y":115.30565643310547,"x":-281.3576354980469,"z":918.8001708984375},"START":{"y":305.06683349609377,"x":-434.6227722167969,"z":918.8001708984375}},{"END":{"y":234.27410888671876,"x":-293.0252380371094,"z":918.8001708984375},"START":{"y":226.801025390625,"x":-558.4661865234375,"z":918.8002319335938}},{"END":{"y":116.89784240722656,"x":-550.26611328125,"z":918.8002319335938},"START":{"y":234.25921630859376,"x":-293.0252380371094,"z":918.8001708984375}},{"END":{"y":116.11589813232422,"x":-278.4886779785156,"z":918.8001708984375},"START":{"y":229.8599395751953,"x":-554.5853271484375,"z":918.8002319335938}},{"END":{"y":118.67588806152344,"x":-266.0829162597656,"z":918.8001708984375},"START":{"y":280.833251953125,"x":-156.23187255859376,"z":918.8001708984375}},{"END":{"y":114.7714614868164,"x":-20.927337646484376,"z":918.8001708984375},"START":{"y":280.1146240234375,"x":-157.45120239257813,"z":918.8001708984375}},{"END":{"y":214.94979858398438,"x":-44.8646240234375,"z":918.8001708984375},"START":{"y":209.97421264648438,"x":-287.0926818847656,"z":918.8001708984375}},{"END":{"y":118.66020202636719,"x":-264.8581848144531,"z":918.8001708984375},"START":{"y":214.9449462890625,"x":-44.865234375,"z":918.8001708984375}},{"END":{"y":114.77893829345703,"x":-22.579193115234376,"z":918.8001708984375},"START":{"y":211.37838745117188,"x":-286.4294128417969,"z":918.8001708984375}},{"END":{"y":114.64627838134766,"x":23.03216552734375,"z":918.8001708984375},"START":{"y":330.5225830078125,"x":186.99761962890626,"z":918.8001098632813}},{"END":{"y":143.90017700195313,"x":446.78814697265627,"z":918.8001098632813},"START":{"y":329.74261474609377,"x":177.7235565185547,"z":918.8001098632813}},{"END":{"y":280.3345031738281,"x":371.98046875,"z":918.8001098632813},"START":{"y":243.61636352539063,"x":9.392913818359375,"z":918.8001708984375}},{"END":{"y":120.71783447265625,"x":28.27685546875,"z":918.8001708984375},"START":{"y":280.01715087890627,"x":366.4453430175781,"z":918.8001098632813}},{"END":{"y":143.85459899902345,"x":449.87054443359377,"z":918.8001098632813},"START":{"y":243.70497131347657,"x":11.138687133789063,"z":918.9002075195313}},{"END":{"y":129.92242431640626,"x":498.9453125,"z":918.8001098632813},"START":{"y":4031.438720703125,"x":7383.94873046875,"z":-4536.7158203125}},{"END":{"y":4044.003173828125,"x":7149.64453125,"z":-4840.18896484375},"START":{"y":167.46380615234376,"x":524.4659423828125,"z":918.8001098632813}},{"END":{"y":375.25830078125,"x":675.6597900390625,"z":918.800048828125},"START":{"y":141.539794921875,"x":526.361083984375,"z":918.8001098632813}},{"END":{"y":150.47982788085938,"x":878.3062744140625,"z":918.800048828125},"START":{"y":375.171142578125,"x":675.5477294921875,"z":918.9000244140625}},{"END":{"y":301.7305908203125,"x":851.8826904296875,"z":918.800048828125},"START":{"y":253.29684448242188,"x":473.61016845703127,"z":918.8001098632813}},{"END":{"y":133.97897338867188,"x":522.77490234375,"z":918.8001098632813},"START":{"y":301.71209716796877,"x":851.7230224609375,"z":918.9000244140625}},{"END":{"y":150.5076141357422,"x":878.158203125,"z":918.8887939453125},"START":{"y":251.99636840820313,"x":477.73455810546877,"z":918.8001098632813}},{"END":{"y":140.34786987304688,"x":941.653564453125,"z":918.800048828125},"START":{"y":389.7381591796875,"x":1134.7149658203126,"z":918.7999877929688}},{"END":{"y":142.6903076171875,"x":1255.3626708984376,"z":986.2607421875},"START":{"y":386.88177490234377,"x":1131.8980712890626,"z":918.7999877929688}},{"END":{"y":255.59420776367188,"x":1255.3626708984376,"z":973.6498413085938},"START":{"y":248.17710876464845,"x":941.3038330078125,"z":918.800048828125}},{"END":{"y":138.6337890625,"x":942.7069091796875,"z":918.800048828125},"START":{"y":255.59194946289063,"x":1255.3626708984376,"z":973.6498413085938}},{"END":{"y":148.559326171875,"x":1255.3626708984376,"z":986.6660766601563},"START":{"y":250.73753356933595,"x":943.99365234375,"z":918.800048828125}},{"END":{"y":142.07757568359376,"x":1255.3626708984376,"z":1250.0899658203126},"START":{"y":329.7627868652344,"x":1255.3626708984376,"z":1392.3382568359376}},{"END":{"y":142.5859832763672,"x":1255.3626708984376,"z":1504.990234375},"START":{"y":330.3316345214844,"x":1255.3626708984376,"z":1392.94091796875}},{"END":{"y":258.8377380371094,"x":1255.3626708984376,"z":1504.08642578125},"START":{"y":270.2012634277344,"x":1255.3626708984376,"z":1228.8233642578126}},{"END":{"y":142.73812866210938,"x":1255.3626708984376,"z":1252.095703125},"START":{"y":258.84759521484377,"x":1255.3626708984376,"z":1504.08642578125}},{"END":{"y":142.59776306152345,"x":1255.2626953125,"z":1504.9556884765626},"START":{"y":268.7817687988281,"x":1255.3626708984376,"z":1232.876220703125}},{"END":{"y":172.06773376464845,"x":1255.3626708984376,"z":1577.215087890625},"START":{"y":323.1654052734375,"x":1255.3626708984376,"z":1684.874755859375}},{"END":{"y":172.78382873535157,"x":1255.3626708984376,"z":1795.3758544921876},"START":{"y":322.41595458984377,"x":1255.3626708984376,"z":1684.1224365234376}},{"END":{"y":277.853515625,"x":1255.3626708984376,"z":1784.45263671875},"START":{"y":276.2076416015625,"x":1255.3626708984376,"z":1569.3338623046876}},{"END":{"y":172.86947631835938,"x":1255.3626708984376,"z":1576.44091796875},"START":{"y":277.131103515625,"x":1255.3626708984376,"z":1785.25}},{"END":{"y":172.807373046875,"x":1255.3626708984376,"z":1793.0169677734376},"START":{"y":276.17388916015627,"x":1255.2626953125,"z":1572.37451171875}},{"END":{"y":277.87799072265627,"x":1255.3626708984376,"z":1785.2279052734376},"START":{"y":173.6144256591797,"x":1255.3626708984376,"z":1576.43896484375}},{"END":{"y":171.28628540039063,"x":1255.3626708984376,"z":1577.989013671875},"START":{"y":275.59039306640627,"x":1255.3626708984376,"z":1783.7431640625}},{"END":{"y":154.23992919921876,"x":-945.4140625,"z":2172.056640625},"START":{"y":154.23992919921876,"x":-971.9432983398438,"z":2086.341064453125}},{"END":{"y":154.23992919921876,"x":-1007.0183715820313,"z":2172.684814453125},"START":{"y":154.23992919921876,"x":-971.7673950195313,"z":2086.337158203125}},{"END":{"y":154.23992919921876,"x":-997.87841796875,"z":2101.405029296875},"START":{"y":154.23992919921876,"x":-950.2138671875,"z":2102.4560546875}},{"END":{"y":154.23992919921876,"x":-945.293701171875,"z":2173.080078125},"START":{"y":154.23992919921876,"x":-997.9002685546875,"z":2101.438232421875}},{"END":{"y":154.23992919921876,"x":-1007.2603759765625,"z":2172.658935546875},"START":{"y":154.17425537109376,"x":-950.2349243164063,"z":2102.35546875}},{"END":{"y":156.23992919921876,"x":-946.2525024414063,"z":2281.238525390625},"START":{"y":156.23992919921876,"x":-974.7846069335938,"z":2194.156494140625}},{"END":{"y":156.23992919921876,"x":-1008.1515502929688,"z":2285.944580078125},"START":{"y":156.23992919921876,"x":-974.9061279296875,"z":2194.072998046875}},{"END":{"y":156.23992919921876,"x":-1006.339599609375,"z":2216.3125},"START":{"y":156.23992919921876,"x":-945.2531127929688,"z":2216.349853515625}},{"END":{"y":156.13992309570313,"x":-946.2796630859375,"z":2280.841064453125},"START":{"y":156.23992919921876,"x":-1006.3388671875,"z":2216.324462890625}},{"END":{"y":156.23992919921876,"x":-1007.8014526367188,"z":2284.48876953125},"START":{"y":156.23992919921876,"x":-945.4661865234375,"z":2216.09619140625}},{"END":{"y":102.29255676269531,"x":-931.4529418945313,"z":2081.69189453125},"START":{"y":114.58080291748047,"x":-922.4376831054688,"z":2081.69189453125}},{"END":{"y":102.24958801269531,"x":-915.6085815429688,"z":2081.69189453125},"START":{"y":114.54962921142578,"x":-922.689697265625,"z":2081.69189453125}},{"END":{"y":110.2086410522461,"x":-911.630615234375,"z":2081.69189453125},"START":{"y":109.95545196533203,"x":-934.2704467773438,"z":2081.892333984375}},{"END":{"y":102.11113739013672,"x":-931.4564208984375,"z":2081.69189453125},"START":{"y":110.23047637939453,"x":-911.6434326171875,"z":2081.7919921875}},{"END":{"y":102.406005859375,"x":-915.6173706054688,"z":2081.7919921875},"START":{"y":109.92972564697266,"x":-934.2512817382813,"z":2081.991943359375}},{"END":{"y":101.21490478515625,"x":-906.0643310546875,"z":2081.69189453125},"START":{"y":114.43460845947266,"x":-896.1107177734375,"z":2081.69189453125}},{"END":{"y":101.3296890258789,"x":-886.410400390625,"z":2081.69189453125},"START":{"y":114.43633270263672,"x":-896.1116943359375,"z":2081.69189453125}},{"END":{"y":109.70414733886719,"x":-886.5887451171875,"z":2081.69189453125},"START":{"y":109.69831848144531,"x":-907.8858642578125,"z":2081.69189453125}},{"END":{"y":101.22294616699219,"x":-905.945556640625,"z":2081.7919921875},"START":{"y":109.65858459472656,"x":-886.5887451171875,"z":2081.69189453125}},{"END":{"y":101.20899963378906,"x":-886.2713623046875,"z":2081.69189453125},"START":{"y":109.82720184326172,"x":-908.2702026367188,"z":2081.69189453125}},{"END":{"y":101.46952056884766,"x":-956.8564453125,"z":2081.69189453125},"START":{"y":114.49065399169922,"x":-947.0833129882813,"z":2081.69189453125}},{"END":{"y":100.96875762939453,"x":-937.11865234375,"z":2081.69189453125},"START":{"y":114.6275634765625,"x":-946.9664916992188,"z":2081.69189453125}},{"END":{"y":109.70696258544922,"x":-937.302001953125,"z":2081.69189453125},"START":{"y":109.74185943603516,"x":-958.308349609375,"z":2081.69189453125}},{"END":{"y":101.48695373535156,"x":-956.8440551757813,"z":2081.7919921875},"START":{"y":109.74017333984375,"x":-937.320068359375,"z":2081.7919921875}},{"END":{"y":100.57843017578125,"x":-936.9810791015625,"z":2081.69189453125},"START":{"y":109.73999786376953,"x":-958.4256591796875,"z":2081.69189453125}},{"END":{"y":108.94392395019531,"x":-884.7134399414063,"z":2051.52978515625},"START":{"y":115.51712036132813,"x":-884.7134399414063,"z":2056.5458984375}},{"END":{"y":108.75563049316406,"x":-884.7134399414063,"z":2061.450927734375},"START":{"y":115.60266876220703,"x":-884.7134399414063,"z":2056.4560546875}},{"END":{"y":113.34575653076172,"x":-884.7134399414063,"z":2063.40966796875},"START":{"y":113.41529846191406,"x":-884.7134399414063,"z":2049.598388671875}},{"END":{"y":108.96411895751953,"x":-884.8134155273438,"z":2051.62158203125},"START":{"y":113.33402252197266,"x":-884.7134399414063,"z":2063.40966796875}},{"END":{"y":108.76318359375,"x":-884.7134399414063,"z":2061.267822265625},"START":{"y":113.51944732666016,"x":-884.7134399414063,"z":2049.599609375}},{"END":{"y":93.03186798095703,"x":-887.6655883789063,"z":2081.091796875},"START":{"y":108.75685119628906,"x":-897.8446655273438,"z":2081.091796875}},{"END":{"y":93.08016204833985,"x":-907.0662231445313,"z":2081.091796875},"START":{"y":108.77275848388672,"x":-897.8396606445313,"z":2081.091796875}},{"END":{"y":104.02896118164063,"x":-907.7715454101563,"z":2081.091796875},"START":{"y":103.80728149414063,"x":-887.57666015625,"z":2081.091796875}},{"END":{"y":93.02508544921875,"x":-887.7172241210938,"z":2080.99169921875},"START":{"y":104.01947021484375,"x":-907.7715454101563,"z":2081.091796875}},{"END":{"y":93.05782318115235,"x":-907.1253662109375,"z":2081.091796875},"START":{"y":103.80181121826172,"x":-887.5982666015625,"z":2080.99169921875}},{"END":{"y":92.8918228149414,"x":-905.5601806640625,"z":2032.7113037109376},"START":{"y":108.97908020019531,"x":-895.8859252929688,"z":2032.7113037109376}},{"END":{"y":92.54100799560547,"x":-887.3976440429688,"z":2032.7113037109376},"START":{"y":108.92406463623047,"x":-895.8799438476563,"z":2032.7113037109376}},{"END":{"y":103.79842376708985,"x":-885.4332885742188,"z":2032.7113037109376},"START":{"y":103.73773956298828,"x":-907.7452392578125,"z":2032.7113037109376}},{"END":{"y":92.89654541015625,"x":-905.4644165039063,"z":2032.811279296875},"START":{"y":103.77120208740235,"x":-885.4690551757813,"z":2032.811279296875}},{"END":{"y":92.63138580322266,"x":-887.54150390625,"z":2032.811279296875},"START":{"y":103.76959991455078,"x":-907.7134399414063,"z":2032.811279296875}},{"END":{"y":93.4881591796875,"x":-965.700439453125,"z":2152.83740234375},"START":{"y":99.61062622070313,"x":-965.700439453125,"z":2148.604736328125}},{"END":{"y":92.9949951171875,"x":-965.700439453125,"z":2144.512451171875},"START":{"y":99.57894897460938,"x":-965.700439453125,"z":2148.561279296875}},{"END":{"y":97.36463928222656,"x":-965.700439453125,"z":2143.88134765625},"START":{"y":97.35840606689453,"x":-965.700439453125,"z":2153.32470703125}},{"END":{"y":93.43599700927735,"x":-965.700439453125,"z":2152.88427734375},"START":{"y":97.37355041503906,"x":-965.6004638671875,"z":2143.907470703125}},{"END":{"y":92.99623107910156,"x":-965.6004638671875,"z":2144.535888671875},"START":{"y":97.56494140625,"x":-965.700439453125,"z":2153.31640625}},{"END":{"y":93.08169555664063,"x":-965.7015991210938,"z":2210.7734375},"START":{"y":99.390625,"x":-965.7015991210938,"z":2206.2744140625}},{"END":{"y":93.12646484375,"x":-965.7015991210938,"z":2202.45361328125},"START":{"y":99.45545196533203,"x":-965.7015991210938,"z":2206.27197265625}},{"END":{"y":97.10565185546875,"x":-965.7015991210938,"z":2202.1796875},"START":{"y":97.08848571777344,"x":-965.7015991210938,"z":2210.852294921875}},{"END":{"y":93.03691101074219,"x":-965.7015991210938,"z":2210.823974609375},"START":{"y":97.10563659667969,"x":-965.7015991210938,"z":2202.1796875}},{"END":{"y":92.94606018066406,"x":-965.7015991210938,"z":2202.255859375},"START":{"y":97.20560455322266,"x":-965.7015991210938,"z":2210.889404296875}},{"END":{"y":88.0173568725586,"x":-546.1117553710938,"z":2461.97119140625},"START":{"y":88.02049255371094,"x":-603.4750366210938,"z":2490.167724609375}},{"END":{"y":88.01746368408203,"x":-548.0769653320313,"z":2518.29345703125},"START":{"y":88.02050018310547,"x":-603.5758666992188,"z":2490.109130859375}},{"END":{"y":88.01998901367188,"x":-594.1859741210938,"z":2508.22998046875},"START":{"y":88.01990509033203,"x":-592.6204223632813,"z":2468.71728515625}},{"END":{"y":88.01734924316406,"x":-545.8875732421875,"z":2462.034912109375},"START":{"y":88.01998901367188,"x":-594.1859741210938,"z":2508.22998046875}},{"END":{"y":87.91747283935547,"x":-548.214599609375,"z":2518.22119140625},"START":{"y":87.91990661621094,"x":-592.5966186523438,"z":2468.764892578125}},{"END":{"y":87.41364288330078,"x":-478.1480407714844,"z":2453.458251953125},"START":{"y":87.4170150756836,"x":-539.857177734375,"z":2488.021484375}},{"END":{"y":87.41378021240235,"x":-480.6669921875,"z":2515.35546875},"START":{"y":87.31920623779297,"x":-539.8732299804688,"z":2487.915771484375}},{"END":{"y":88.01749420166016,"x":-548.5107421875,"z":2455.36572265625},"START":{"y":88.01749420166016,"x":-548.5888671875,"z":2455.326171875}},{"END":{"y":87.41647338867188,"x":-529.9415283203125,"z":2506.473388671875},"START":{"y":87.41654205322266,"x":-531.1809692382813,"z":2467.586181640625}},{"END":{"y":87.4135971069336,"x":-477.28936767578127,"z":2453.044921875},"START":{"y":87.41647338867188,"x":-529.9544067382813,"z":2506.54541015625}},{"END":{"y":87.41374969482422,"x":-480.166015625,"z":2515.59912109375},"START":{"y":87.41654968261719,"x":-531.2951049804688,"z":2467.5791015625}},{"END":{"y":86.2100601196289,"x":-412.7693176269531,"z":2463.39892578125},"START":{"y":86.21240234375,"x":-455.6478271484375,"z":2480.861083984375}},{"END":{"y":86.20987701416016,"x":-409.4996643066406,"z":2498.904296875},"START":{"y":86.21240234375,"x":-455.62152099609377,"z":2480.781494140625}},{"END":{"y":86.21173095703125,"x":-443.4034118652344,"z":2496.752197265625},"START":{"y":86.21174621582031,"x":-443.5809326171875,"z":2461.92041015625}},{"END":{"y":86.2100601196289,"x":-412.73468017578127,"z":2463.54736328125},"START":{"y":86.21173858642578,"x":-443.4355773925781,"z":2496.751708984375}},{"END":{"y":86.20987701416016,"x":-409.50262451171877,"z":2498.596923828125},"START":{"y":86.21174621582031,"x":-443.578369140625,"z":2461.82177734375}},{"END":{"y":87.20746612548828,"x":-336.00872802734377,"z":2463.330322265625},"START":{"y":87.21025848388672,"x":-387.0927734375,"z":2481.695556640625}},{"END":{"y":87.2073745727539,"x":-334.29461669921877,"z":2499.8134765625},"START":{"y":87.21026611328125,"x":-387.2268981933594,"z":2481.600830078125}},{"END":{"y":87.20956420898438,"x":-374.3652038574219,"z":2497.40283203125},"START":{"y":87.20954895019531,"x":-374.0243225097656,"z":2463.533447265625}},{"END":{"y":87.20746612548828,"x":-336.012939453125,"z":2463.50537109375},"START":{"y":87.20956420898438,"x":-374.3817443847656,"z":2497.40283203125}},{"END":{"y":87.10738372802735,"x":-334.5453796386719,"z":2499.7587890625},"START":{"y":87.20955657958985,"x":-374.2532653808594,"z":2463.580810546875}},{"END":{"y":87.80361938476563,"x":-265.6149597167969,"z":2462.81201171875},"START":{"y":87.80661010742188,"x":-320.39617919921877,"z":2482.5107421875}},{"END":{"y":87.80343627929688,"x":-262.41650390625,"z":2505.966796875},"START":{"y":87.80661010742188,"x":-320.42828369140627,"z":2482.510986328125}},{"END":{"y":87.80577850341797,"x":-305.148193359375,"z":2503.3720703125},"START":{"y":87.80579376220703,"x":-305.4603576660156,"z":2461.787841796875}},{"END":{"y":87.8035888671875,"x":-265.106201171875,"z":2462.392333984375},"START":{"y":87.8057861328125,"x":-305.28692626953127,"z":2503.526611328125}},{"END":{"y":87.8034439086914,"x":-262.4534606933594,"z":2505.7890625},"START":{"y":87.71028137207031,"x":-305.5599365234375,"z":2461.833740234375}},{"END":{"y":88.99913787841797,"x":-183.68577575683595,"z":2459.197509765625},"START":{"y":88.40225219726563,"x":-240.70838928222657,"z":2481.71044921875}},{"END":{"y":88.99896240234375,"x":-180.4786376953125,"z":2504.671630859375},"START":{"y":88.40225982666016,"x":-240.73167419433595,"z":2481.526611328125}},{"END":{"y":88.40150451660156,"x":-226.98101806640626,"z":2497.666748046875},"START":{"y":88.40158081054688,"x":-228.29132080078126,"z":2460.124267578125}},{"END":{"y":88.99913787841797,"x":-183.68679809570313,"z":2459.388671875},"START":{"y":88.40150451660156,"x":-226.9457244873047,"z":2497.678955078125}},{"END":{"y":88.8965835571289,"x":-180.74317932128907,"z":2504.604248046875},"START":{"y":88.4015884399414,"x":-228.4702911376953,"z":2459.946044921875}},{"END":{"y":89.59431457519531,"x":-95.48756408691406,"z":2462.315185546875},"START":{"y":88.9981460571289,"x":-165.53550720214845,"z":2482.552734375}},{"END":{"y":89.59420776367188,"x":-93.53743743896485,"z":2506.426513671875},"START":{"y":88.9981460571289,"x":-165.54933166503907,"z":2482.452392578125}},{"END":{"y":88.99713134765625,"x":-146.93460083007813,"z":2502.857177734375},"START":{"y":88.99711608886719,"x":-146.62660217285157,"z":2459.03271484375}},{"END":{"y":89.59432220458985,"x":-95.49659729003906,"z":2462.09521484375},"START":{"y":88.93180847167969,"x":-147.03428649902345,"z":2502.81103515625}},{"END":{"y":89.59420776367188,"x":-93.47562408447266,"z":2506.202880859375},"START":{"y":88.99708557128906,"x":-146.15464782714845,"z":2459.185791015625}},{"END":{"y":90.7896499633789,"x":-10.157928466796875,"z":2455.289794921875},"START":{"y":89.5931625366211,"x":-74.30888366699219,"z":2481.715087890625}},{"END":{"y":90.7892837524414,"x":-3.408505439758301,"z":2510.486572265625},"START":{"y":89.5931625366211,"x":-74.40985107421875,"z":2481.707763671875}},{"END":{"y":90.19206237792969,"x":-54.269287109375,"z":2505.232177734375},"START":{"y":90.19209289550781,"x":-54.85717010498047,"z":2451.887939453125}},{"END":{"y":90.78961944580078,"x":-9.519050598144532,"z":2455.175048828125},"START":{"y":90.19205474853516,"x":-54.224952697753909,"z":2505.371337890625}},{"END":{"y":90.67157745361328,"x":-4.429584503173828,"z":2510.0048828125},"START":{"y":90.19209289550781,"x":-54.843589782714847,"z":2451.340087890625}},{"END":{"y":91.38481140136719,"x":78.28938293457031,"z":2454.921142578125},"START":{"y":90.78870391845703,"x":7.14077091217041,"z":2484.87890625}},{"END":{"y":91.38457489013672,"x":82.6861801147461,"z":2515.94873046875},"START":{"y":90.78870391845703,"x":7.1085710525512699,"z":2484.6884765625}},{"END":{"y":90.7878189086914,"x":23.31317901611328,"z":2508.315185546875},"START":{"y":90.78780364990235,"x":23.599246978759767,"z":2456.379150390625}},{"END":{"y":91.38484954833985,"x":77.63298034667969,"z":2455.047607421875},"START":{"y":90.7878189086914,"x":23.339927673339845,"z":2508.315185546875}},{"END":{"y":91.38453674316406,"x":83.36195373535156,"z":2516.120849609375},"START":{"y":90.68780517578125,"x":23.61175537109375,"z":2456.49462890625}},{"END":{"y":155.13348388671876,"x":-564.4434814453125,"z":2238.619873046875},"START":{"y":51.083343505859378,"x":-309.1861877441406,"z":2187.71923828125}},{"END":{"y":51.15045166015625,"x":-404.96490478515627,"z":2259.654541015625},"START":{"y":51.083343505859378,"x":-309.1837463378906,"z":2187.71875}},{"END":{"y":155.320068359375,"x":-588.6900634765625,"z":2299.9619140625},"START":{"y":51.08323669433594,"x":-308.9111328125,"z":2186.677001953125}},{"END":{"y":51.147132873535159,"x":-410.23419189453127,"z":2204.146728515625},"START":{"y":51.147090911865237,"x":-410.18359375,"z":2204.35888671875}},{"END":{"y":51.75672912597656,"x":-473.584228515625,"z":2272.160888671875},"START":{"y":51.756744384765628,"x":-473.8160095214844,"z":2272.391845703125}}]
]]
    if setclipboard then
        setclipboard(starsData)
        print("Stars data copied to clipboard!")
    else
        warn("Clipboard not supported on this executor.")
    end
end)


DrawSettings.StarAriseLoop = DrawSettings.StarAriseLoop or false

Buttons.StarAriseButton.MouseButton1Click:Connect(function()
    if DrawSettings.StarAriseLoop then
        -- turn off
        DrawSettings.StarAriseLoop = false
        Buttons.StarAriseButton.Text = "STAR ARISE: OFF"
        Buttons.StarAriseButton.TextColor3 = neutralBtn
        stopLoop("StarAriseLoop")
        return
    end

    -- turn on
    Buttons.StarAriseButton.Text = "STAR ARISE: ON"
    Buttons.StarAriseButton.TextColor3 = Color3.fromRGB(255, 215, 0)
    DrawSettings.StarAriseLoop = true

    startLoop("StarAriseLoop", function(loop)
        while loop.running do
            local centerPos = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and plr.Character.HumanoidRootPart.Position or Vector3.new(0, 0, 0)
            local args = {}

            -- helper to make upright pentagram
            local function makeStar(center, size, thickness)
                local pts = {}
                for p = 0, 4 do
                    local angle = math.rad(p * 72 - 90) -- upright in XY plane
                    local x = math.cos(angle) * size
                    local y = math.sin(angle) * size
                    table.insert(pts, center + Vector3.new(x, y, 0))
                end
                local order = {1, 3, 5, 2, 4, 1}
                for i = 1, #order - 1 do
                    local a = pts[order[i]]
                    local b = pts[order[i + 1]]
                    -- bold line thickness
                    for t = -thickness, thickness, thickness do
                        local offset = Vector3.new(0, 0, t * 0.05)
                        table.insert(args, {START = a + offset, END = b + offset})
                    end
                end
            end

            -- === Pentagrams everywhere ===
            for i = 1, 80 do
                local pos = centerPos + Vector3.new(math.random(-40, 40), math.random(-5, 5), math.random(-40, 40))
                makeStar(pos, math.random(3, 7), 2)
            end

            -- === Dots everywhere ===
            for i = 1, 300 do
                local pos = centerPos + Vector3.new(math.random(-50, 50), math.random(-8, 8), math.random(-50, 50))
                table.insert(args, {START = pos, END = pos + Vector3.new(0.15, 0, 0)})
                table.insert(args, {START = pos, END = pos + Vector3.new(0, 0.15, 0)})
            end

            -- fire all at once for simultaneous pop
            local oldBold = DrawSettings.BoldBullet
            DrawSettings.BoldBullet = true
            Fire_Replicated_Bullet(args, false)
            DrawSettings.BoldBullet = oldBold

            task.wait(0.5) -- pop interval
        end
    end)
end)




-- === FOV PRISON (Dense bullet-ray jail cube) ===
DrawSettings.FOVPrisonLoop = DrawSettings.FOVPrisonLoop or false
DrawSettings.FOVPrisonTarget = nil

local fovClickConn = nil

-- Local helper to get player from part
local function getPlayerFromPart(part)
    if not part then return nil end
    local model = part:FindFirstAncestorOfClass("Model")
    if model and model:FindFirstChild("Humanoid") then
        return game:GetService("Players"):GetPlayerFromCharacter(model)
    end
    return nil
end

Buttons.FOVPrisonButton.MouseButton1Click:Connect(function()
    -- Toggle OFF
    if DrawSettings.FOVPrisonLoop then
        DrawSettings.FOVPrisonLoop = false
        DrawSettings.FOVPrisonTarget = nil
        Buttons.FOVPrisonButton.Text = "FOV PRISON: OFF"
        Buttons.FOVPrisonButton.TextColor3 = neutralBtn
        if fovClickConn then fovClickConn:Disconnect() fovClickConn = nil end
        stopLoop("FOVPrisonLoop")
        return
    end

    -- Target selection mode
    Buttons.FOVPrisonButton.Text = "CLICK TARGET..."
    Buttons.FOVPrisonButton.TextColor3 = Color3.fromRGB(255,160,0)

    local mouse = plr:GetMouse()
    if fovClickConn then fovClickConn:Disconnect() fovClickConn = nil end

    fovClickConn = mouse.Button1Down:Connect(function()
        if DrawSettings.HoveringOverGui then return end
        local targetPart = mouse.Target
        local targetPlayer = getPlayerFromPart(targetPart)
        if not targetPlayer then return end

        -- Got target
        DrawSettings.FOVPrisonTarget = targetPlayer
        DrawSettings.FOVPrisonLoop = true
        Buttons.FOVPrisonButton.Text = "FOV PRISON -> " .. tostring(targetPlayer.Name)
        Buttons.FOVPrisonButton.TextColor3 = Color3.fromRGB(255,100,100)

        if fovClickConn then fovClickConn:Disconnect() fovClickConn = nil end

        startLoop("FOVPrisonLoop", function(loop)
            while loop.running do
                if not DrawSettings.FOVPrisonTarget or not DrawSettings.FOVPrisonTarget.Character then break end
                local root = DrawSettings.FOVPrisonTarget.Character:FindFirstChild("HumanoidRootPart")
                if not root then break end

                local center = root.Position
                local halfSize = 4 -- distance from center to each wall of jail
                local density = 1 -- gap between bars

                local args = {}

                -- Create cube edges with dense vertical & horizontal bars
                for x = -halfSize, halfSize, density do
                    for y = -halfSize, halfSize, density do
                        -- Front & back walls
                        table.insert(args, {START = Vector3.new(center.X + x, center.Y + y, center.Z - halfSize), END = Vector3.new(center.X + x, center.Y + y, center.Z + halfSize)})
                        -- Left & right walls
                        table.insert(args, {START = Vector3.new(center.X - halfSize, center.Y + y, center.Z + x), END = Vector3.new(center.X + halfSize, center.Y + y, center.Z + x)})
                    end
                end

                for z = -halfSize, halfSize, density do
                    for y = -halfSize, halfSize, density do
                        -- Top & bottom walls
                        table.insert(args, {START = Vector3.new(center.X + z, center.Y - halfSize, center.Z + y), END = Vector3.new(center.X + z, center.Y + halfSize, center.Z + y)})
                    end
                end

                -- Fire all as bold rays
                local oldBold = DrawSettings.BoldBullet
                DrawSettings.BoldBullet = true
                Fire_Replicated_Bullet(args, false)
                DrawSettings.BoldBullet = oldBold

                task.wait(0.5)
            end
        end)
    end)
end)


-- === PENTAGRAM RAIN FEATURE ===
DrawSettings.PentagramRainLoop = DrawSettings.PentagramRainLoop or false

Buttons.PentagramRainButton.MouseButton1Click:Connect(function()
    DrawSettings.PentagramRainLoop = not DrawSettings.PentagramRainLoop
    if DrawSettings.PentagramRainLoop then
        Buttons.PentagramRainButton.Text = "PENTAGRAM RAIN: ON"
        Buttons.PentagramRainButton.TextColor3 = Color3.fromRGB(255, 100, 100)

        startLoop("PentagramRainLoop", function(loop)
            while loop.running do
                local allBullets = {}

                -- Spawn 50 pentagrams
                for i = 1, 50 do
                    -- Pick a base position near a random player
                    local basePlayer = getOtherPlayers()[math.random(1, math.max(1, #getOtherPlayers()))]
                    local basePos
                    if basePlayer and basePlayer.Character and basePlayer.Character:FindFirstChild("HumanoidRootPart") then
                        local hrp = basePlayer.Character.HumanoidRootPart
                        basePos = hrp.Position + Vector3.new(math.random(-40,40), 0, math.random(-40,40))
                    else
                        basePos = Vector3.new(math.random(-100,100), 0, math.random(-100,100))
                    end

                    -- Height above ground (5–6 meters)
                    local center = Vector3.new(basePos.X, basePos.Y + math.random(16, 20), basePos.Z)
                    local size = 6 -- radius of pentagram

                    -- Calculate 5 points of pentagram in 3D (top-down)
                    local points = {}
                    for p = 0, 4 do
                        local angle = math.rad((p * 72) - 90) -- start pointing up
                        local x = center.X + size * math.cos(angle)
                        local z = center.Z + size * math.sin(angle)
                        table.insert(points, Vector3.new(x, center.Y, z))
                    end

                    -- Connect points in pentagram pattern (skip 1 each time)
                    local order = {1, 3, 5, 2, 4, 1}
                    for j = 1, #order-1 do
                        table.insert(allBullets, {
                            START = points[order[j]],
                            END = points[order[j+1]]
                        })
                    end
                end

                -- Fire all lines as bold
                local oldBold = DrawSettings.BoldBullet
                DrawSettings.BoldBullet = true
                Fire_Replicated_Bullet(allBullets, false) -- non-lethal
                DrawSettings.BoldBullet = oldBold

                task.wait(1) -- every 1 second
            end
        end)

    else
        Buttons.PentagramRainButton.Text = "PENTAGRAM RAIN: OFF"
        Buttons.PentagramRainButton.TextColor3 = neutralBtn
        stopLoop("PentagramRainLoop")
    end
end)
-- === END PENTAGRAM RAIN ===





-- === STAR RAIN FEATURE ===
DrawSettings.StarRainLoop = DrawSettings.StarRainLoop or false

Buttons.StarRainButton.MouseButton1Click:Connect(function()
    DrawSettings.StarRainLoop = not DrawSettings.StarRainLoop
    if DrawSettings.StarRainLoop then
        Buttons.StarRainButton.Text = "STAR RAIN: ON"
        Buttons.StarRainButton.TextColor3 = Color3.fromRGB(255, 215, 0) -- gold

        startLoop("StarRainLoop", function(loop)
            while loop.running do
                local bullets = {}

                -- We’ll spawn 50 stars around the map (random positions)
                for i = 1, 50 do
                    -- Pick a random position near players so they can see
                    local basePlayer = getOtherPlayers()[math.random(1, math.max(1, #getOtherPlayers()))]
                    local basePos
                    if basePlayer and basePlayer.Character and basePlayer.Character:FindFirstChild("HumanoidRootPart") then
                        local hrp = basePlayer.Character.HumanoidRootPart
                        -- Random offset within ~40 studs radius
                        basePos = hrp.Position + Vector3.new(math.random(-40,40), 0, math.random(-40,40))
                    else
                        basePos = Vector3.new(math.random(-100,100), 0, math.random(-100,100))
                    end

                    -- Position star 5–6 meters (~16–20 studs) above ground
                    local startPos = Vector3.new(basePos.X, basePos.Y + math.random(16, 20), basePos.Z)
                    -- End pos slightly above so tracer is visible but short
                    local endPos = startPos + Vector3.new(0, 0.5, 0)

                    table.insert(bullets, {
                        START = startPos,
                        END = endPos
                    })
                end

                -- Fire all bullets at once as bold
                local oldBold = DrawSettings.BoldBullet
                DrawSettings.BoldBullet = true
                Fire_Replicated_Bullet(bullets, false) -- false = non-lethal
                DrawSettings.BoldBullet = oldBold

                task.wait(1) -- every 1 second
            end
        end)

    else
        Buttons.StarRainButton.Text = "STAR RAIN: OFF"
        Buttons.StarRainButton.TextColor3 = neutralBtn
        stopLoop("StarRainLoop")
    end
end)





DrawSettings.FlingRay = DrawSettings.FlingRay or false

Buttons.FlingRayButton.MouseButton1Click:Connect(function()
    DrawSettings.FlingRay = not DrawSettings.FlingRay
    if DrawSettings.FlingRay then
        Buttons.FlingRayButton.Text = "FLING RAY: ON"
        Buttons.FlingRayButton.TextColor3 = Color3.fromRGB(255, 100, 100)
    else
        Buttons.FlingRayButton.Text = "FLING RAY: OFF"
        Buttons.FlingRayButton.TextColor3 = neutralBtn
    end
end)

-- helper to create fling collider
local function createFlingCollider(startPos, endPos)
    local part = Instance.new("Part")
    part.Anchored = true
    part.CanCollide = false
    part.Transparency = 1
    part.Size = Vector3.new(0.2, 0.2, (startPos - endPos).Magnitude)
    part.CFrame = CFrame.new((startPos + endPos)/2, endPos)
    part.Parent = workspace

    part.Touched:Connect(function(hit)
        if not DrawSettings.FlingRay then return end
        local plr = game.Players:GetPlayerFromCharacter(hit.Parent)
        if plr and plr ~= game.Players.LocalPlayer then
            local hrp = hit.Parent:FindFirstChild("HumanoidRootPart")
            if hrp then
                hrp.Velocity = Vector3.new(0, 200, 0) -- fling upward
            end
        end
    end)

    game.Debris:AddItem(part, 0.1) -- remove after short time
end

-- hook into your bullet firing to spawn colliders
local oldFire = Fire_Replicated_Bullet
Fire_Replicated_Bullet = function(bullets, doDamage)
    if DrawSettings.FlingRay then
        for _, b in ipairs(bullets) do
            if b.START and b.END then
                createFlingCollider(b.START, b.END)
            end

            DrawSettings.LocalFlingColliders = DrawSettings.LocalFlingColliders or {}

-- last time we flung local player (cooldown)
DrawSettings.LastLocalFling = DrawSettings.LastLocalFling or 0
local LOCAL_FLING_COOLDOWN = 0.75 -- seconds between flings to avoid repeat spam
local LOCAL_FLING_DISTANCE_THRESHOLD = 0.9 -- studs; distance from HRP to segment to trigger fling

-- helper: distance from point p to segment [a,b], returns distance and closest point
local function pointToSegmentDistance(p, a, b)
    local ab = b - a
    local abDot = ab:Dot(ab)
    if abDot == 0 then
        return (p - a).Magnitude, a
    end
    local t = (p - a):Dot(ab) / abDot
    if t < 0 then t = 0 elseif t > 1 then t = 1 end
    local closest = a + ab * t
    return (p - closest).Magnitude, closest
end

-- Wrap Fire_Replicated_Bullet to record bullet segments locally when FlingRay is ON.
-- We do NOT change the original behavior; we only append local collider records.
do
    local _origFire = Fire_Replicated_Bullet
    Fire_Replicated_Bullet = function(args, doDamage)
        -- record local collider info if user enabled FlingRay
        if DrawSettings.FlingRay then
            local now = os.clock()
            for _, seg in ipairs(args or {}) do
                if seg and seg.START and seg.END then
                    -- store a tiny-lived collider (client-side only)
                    table.insert(DrawSettings.LocalFlingColliders, {
                        START = seg.START,
                        END = seg.END,
                        EXPIRE = now + 0.18 -- keep ~0.18s (matches your ray lifetime)
                    })
                end
            end
        end
        -- call original function (preserve server calls / visuals)
        return _origFire(args, doDamage)
    end
end

-- background loop: check local colliders for intersection with our local player
task.spawn(function()
    while task.wait(0.04) do -- ~25Hz check (fast enough, cheap)
        -- quick exit if no colliders
        if not DrawSettings.LocalFlingColliders or #DrawSettings.LocalFlingColliders == 0 then
            -- still cleanup expired entries occasionally
            local now = os.clock()
            for i = #DrawSettings.LocalFlingColliders, 1, -1 do
                if DrawSettings.LocalFlingColliders[i].EXPIRE <= now then
                    table.remove(DrawSettings.LocalFlingColliders, i)
                end
            end
            continue
        end

        local char = plr.Character
        local hrp = char and (char:FindFirstChild("HumanoidRootPart") or char.PrimaryPart)
        if not hrp then
            -- if no HRP, just purge expired colliders
            local now = os.clock()
            for i = #DrawSettings.LocalFlingColliders, 1, -1 do
                if DrawSettings.LocalFlingColliders[i].EXPIRE <= now then
                    table.remove(DrawSettings.LocalFlingColliders, i)
                end
            end
            continue
        end

        local now = os.clock()
        for i = #DrawSettings.LocalFlingColliders, 1, -1 do
            local col = DrawSettings.LocalFlingColliders[i]
            if not col then
                table.remove(DrawSettings.LocalFlingColliders, i)
            elseif col.EXPIRE <= now then
                table.remove(DrawSettings.LocalFlingColliders, i)
            else
                -- test distance from HRP to segment
                local dist, closest = pointToSegmentDistance(hrp.Position, col.START, col.END)
                if dist <= LOCAL_FLING_DISTANCE_THRESHOLD then
                    -- apply fling to local player (client-side). Use cooldown to avoid spamming.
                    if now - (DrawSettings.LastLocalFling or 0) >= LOCAL_FLING_COOLDOWN then
                        DrawSettings.LastLocalFling = now
                        -- direction away from the closest point on segment
                        local ok, _ = pcall(function()
                            local dir = (hrp.Position - closest)
                            if dir.Magnitude < 0.001 then
                                dir = Vector3.new(0,1,0)
                            end
                            dir = dir.Unit
                            -- Tune these numbers to get the desired 'fling' feel
                            local horizontalSpeed = 80
                            local verticalBoost = 60
                            -- Use AssemblyLinearVelocity if available; fallback to Velocity
                            if hrp:FindFirstChildWhichIsA("BasePart") then end -- noop
                            hrp.AssemblyLinearVelocity = dir * horizontalSpeed + Vector3.new(0, verticalBoost, 0)
                        end)
                        -- optional visual feedback: you can add a small particle or sound here
                    end
                    -- remove collider immediately so it can't trigger again same tick
                    table.remove(DrawSettings.LocalFlingColliders, i)
                end
            end
        end
    end
end)
-- ===== END LOCAL-FLING DETECTION =====
        end
    end
    return oldFire(bullets, doDamage)
end



DrawSettings.SmiteLoop = DrawSettings.SmiteLoop or false

Buttons.SmiteButton.MouseButton1Click:Connect(function()
    DrawSettings.SmiteLoop = not DrawSettings.SmiteLoop
    if DrawSettings.SmiteLoop then
        Buttons.SmiteButton.Text = "SMITE: ON"
        Buttons.SmiteButton.TextColor3 = Color3.fromRGB(255, 100, 100)

        startLoop("SmiteLoop", function(loop)
            while loop.running do
                local allBullets = {}

                for _, player in ipairs(getOtherPlayers()) do
                    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                    if hrp then
                        local center = hrp.Position
                        -- generate 5 bold bullets for this player's root
                        for i = 1, 5 do
                            local offset = Vector3.new(
                                math.random(-30, 30) / 10, -- small variation
                                math.random(-30, 30) / 10,
                                math.random(-30, 30) / 10
                            )
                            local startPos = center + offset + Vector3.new(0, 20, 0) -- from above a bit
                            local endPos = center + offset
                            table.insert(allBullets, {
                                START = startPos,
                                END = endPos,
                                HIT = player
                            })
                        end
                    end
                end

                if #allBullets > 0 then
                    local oldBold = DrawSettings.BoldBullet
                    DrawSettings.BoldBullet = true
                    Fire_Replicated_Bullet(allBullets, true) -- lethal
                    DrawSettings.BoldBullet = oldBold
                end

                task.wait(0.4) -- loop delay
            end
        end)

    else
        Buttons.SmiteButton.Text = "SMITE: OFF"
        Buttons.SmiteButton.TextColor3 = neutralBtn
        stopLoop("SmiteLoop")
    end
end)



-- === BLIND FEATURE (360° Bullet Shield) ===
DrawSettings.BlindLoop = DrawSettings.BlindLoop or false
DrawSettings.BlindTarget = DrawSettings.BlindTarget or nil

local function getPlayerFromPart(part)
    if not part then return nil end
    local model = part:FindFirstAncestorOfClass("Model")
    if model and model:FindFirstChild("Humanoid") then
        return game:GetService("Players"):GetPlayerFromCharacter(model)
    end
    return nil
end

local blindClickConn = nil

Buttons.BlindButton.MouseButton1Click:Connect(function()
    -- Toggle OFF
    if DrawSettings.BlindLoop then
        DrawSettings.BlindLoop = false
        DrawSettings.BlindTarget = nil
        Buttons.BlindButton.Text = "BLIND: OFF"
        Buttons.BlindButton.TextColor3 = neutralBtn or Color3.fromRGB(40,40,40)
        if blindClickConn then blindClickConn:Disconnect() blindClickConn = nil end
        stopLoop("BlindLoop")
        return
    end

    -- Enter selection mode
    Buttons.BlindButton.Text = "BLIND: CLICK TARGET..."
    Buttons.BlindButton.TextColor3 = Color3.fromRGB(255,160,0)

    local mouse = plr:GetMouse()
    if blindClickConn then blindClickConn:Disconnect() blindClickConn = nil end

    blindClickConn = mouse.Button1Down:Connect(function()
        if DrawSettings.HoveringOverGui then return end
        local targetPart = mouse.Target
        local targetPlayer = getPlayerFromPart(targetPart)
        if not targetPlayer then return end

        -- Got a target
        DrawSettings.BlindTarget = targetPlayer
        DrawSettings.BlindLoop = true
        Buttons.BlindButton.Text = "BLIND -> " .. tostring(targetPlayer.Name)
        Buttons.BlindButton.TextColor3 = Color3.fromRGB(255,80,80)
        if blindClickConn then blindClickConn:Disconnect() blindClickConn = nil end

        -- Start loop
        startLoop("BlindLoop", function(loop)
            while loop.running do
                local tp = DrawSettings.BlindTarget
                if not tp or not tp.Character then
                    DrawSettings.BlindLoop = false
                    DrawSettings.BlindTarget = nil
                    Buttons.BlindButton.Text = "BLIND: OFF"
                    Buttons.BlindButton.TextColor3 = neutralBtn or Color3.fromRGB(40,40,40)
                    return
                end

                local head = tp.Character:FindFirstChild("Head")
                if head then
                    local bulletData = {}
                    local center = head.Position
                    local radius = 2 -- distance from head to bullet start

                    -- Generate bullets all around head in a sphere
                    for i = 1, 40 do -- increase for denser shield
                        local theta = math.random() * math.pi * 2 -- horizontal angle
                        local phi = math.acos(2 * math.random() - 1) -- vertical angle
                        local offset = Vector3.new(
                            radius * math.sin(phi) * math.cos(theta),
                            radius * math.cos(phi),
                            radius * math.sin(phi) * math.sin(theta)
                        )

                        local startPos = center + offset
                        -- Make bullets travel slightly outward from sphere
                        local dir = offset.Unit * 5
                        local endPos = startPos + dir

                        table.insert(bulletData, {
                            START = startPos,
                            END = endPos
                        })
                    end

                    -- Fire bold, non-lethal bullets
                    local oldBold = DrawSettings.BoldBullet
                    DrawSettings.BoldBullet = true
                    Fire_Replicated_Bullet(bulletData, false)
                    DrawSettings.BoldBullet = oldBold
                end

                task.wait(0.5) -- repeat every 0.5 seconds
            end
        end)
    end)
end)
-- === END BLIND FEATURE ===



-- === RAVE FEATURE (vertical from sky, lethal) ===
Buttons.RaveButton.MouseButton1Click:Connect(function()
    DrawSettings.RaveLoop = not DrawSettings.RaveLoop
    if DrawSettings.RaveLoop then
        Buttons.RaveButton.Text = "RAVE: ON"
        Buttons.RaveButton.TextColor3 = Color3.fromRGB(73, 255, 125)

        startLoop("RaveLoop", function(loop)
            while loop.running do
                local allArgs = {}
                for _, player in ipairs(getOtherPlayers()) do
                    local head = player.Character and player.Character:FindFirstChild("Head")
                    if head then
                        -- origin high above map
                        local origin = Vector3.new(head.Position.X, head.Position.Y + 300, head.Position.Z)
                        -- ensure lethal: head is HIT
                        table.insert(allArgs, {
                            START = origin,
                            END = head.Position,
                            HIT = player
                        })
                    end
                end
                if #allArgs > 0 then
                    Fire_Replicated_Bullet(allArgs, true) -- true means lethal in your file’s function
                end
                task.wait(0.3) -- faster shooting for more damage
            end
        end)

    else
        Buttons.RaveButton.Text = "RAVE: OFF"
        Buttons.RaveButton.TextColor3 = neutralBtn
        stopLoop("RaveLoop")
    end
end)




Buttons.VetoForAllButton.MouseButton1Click:Connect(function()
    drawVetoForAll()
end)
Buttons.VetoForAllLoopButton.MouseButton1Click:Connect(function()
    DrawSettings.VetoAllLoop = not DrawSettings.VetoAllLoop
    if DrawSettings.VetoAllLoop then
        Buttons.VetoForAllLoopButton.Text = "VETO FOR ALL LOOP: ON"
        startLoop("VetoAllLoop", function(loop)
            while loop.running do
                drawVetoForAll()
                for _=1,8 do if not loop.running then return end task.wait(0.11) end
            end
        end)
    else
        Buttons.VetoForAllLoopButton.Text = "VETO FOR ALL LOOP: OFF"
        stopLoop("VetoAllLoop")
    end
end)


local giantScale = 12 -- even bigger

Buttons.HumanLoopButton.MouseButton1Click:Connect(function()
    DrawSettings.HumanLoop = not DrawSettings.HumanLoop

    if DrawSettings.HumanLoop then
        Buttons.HumanLoopButton.Text = "CLICK TO PLACE HUMAN..."
        Buttons.HumanLoopButton.TextColor3 = Color3.fromRGB(255, 255, 125)

        local clickConn
        clickConn = game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
            if gameProcessed then return end
            if input.UserInputType == Enum.UserInputType.MouseButton1 and not DrawSettings.HoveringOverGui then
                local mouse = plr:GetMouse()
                local pos = mouse.Hit.p

                Buttons.HumanLoopButton.Text = "HUMAN LOOP: ON"
                Buttons.HumanLoopButton.TextColor3 = Color3.fromRGB(73, 255, 125)

                startLoop("HumanLoop", function(loop)
                    while loop.running do
                        local args = CreateHumanArgs(pos, giantScale)
                        Fire_Replicated_Bullet(args, DrawSettings.DOKILL)
                        task.wait(0.4)
                    end
                end)

                clickConn:Disconnect()
            end
        end)
    else
        Buttons.HumanLoopButton.Text = "HUMAN LOOP: OFF"
        Buttons.HumanLoopButton.TextColor3 = Color3.fromRGB(200, 150, 100)
        stopLoop("HumanLoop")
    end
end)

-- === MULTI HUMAN LOOP ===
Buttons.MultiHumanLoopButton.MouseButton1Click:Connect(function()
    if not DrawSettings.MultiHumanLoop then
        -- Turn on loop
        DrawSettings.MultiHumanLoop = true
        DrawSettings.MultiHumanPlacement = true

        Buttons.MultiHumanLoopButton.Text = "CLICK TO PLACE HUMANS... (Press E to stop placing)"
        Buttons.MultiHumanLoopButton.TextColor3 = Color3.fromRGB(255, 255, 125)

        DrawSettings.MultiHumanEntries = {}
        DrawSettings.MultiHumanNextId = 0

        -- Input handling
        DrawSettings.MultiHumanClickConn = game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
            if gameProcessed then return end

            -- Left-click → place new human
            if DrawSettings.MultiHumanPlacement 
                and input.UserInputType == Enum.UserInputType.MouseButton1 
                and not DrawSettings.HoveringOverGui then

                local mouse = plr:GetMouse()
                local pos = mouse.Hit.p

                DrawSettings.MultiHumanNextId += 1
                local id = DrawSettings.MultiHumanNextId
                local loopName = "MultiHuman_" .. tostring(id)

                table.insert(DrawSettings.MultiHumanEntries, {
                    id = id,
                    origin = pos,
                    loopName = loopName
                })

                Buttons.MultiHumanLoopButton.Text = 
                    "HUMANS PLACED: " .. tostring(#DrawSettings.MultiHumanEntries) .. " (Press E to stop placing)"
                Buttons.MultiHumanLoopButton.TextColor3 = Color3.fromRGB(73, 255, 125)

                -- Start drawing loop for this human
                startLoop(loopName, function(loop)
                    while loop.running do
                        local args = CreateHumanArgs(pos, giantScale or 12) -- giantScale fallback
                        Fire_Replicated_Bullet(args, DrawSettings.DOKILL)
                        task.wait(0.4)
                    end
                end)
            end

            -- Press E → exit placement mode but keep loops running
            if input.KeyCode == Enum.KeyCode.E and DrawSettings.MultiHumanPlacement then
                DrawSettings.MultiHumanPlacement = false
                Buttons.MultiHumanLoopButton.Text = 
                    "HUMANS PLACED: " .. tostring(#DrawSettings.MultiHumanEntries)
            end
        end)

    else
        -- Turn off everything
        DrawSettings.MultiHumanLoop = false
        DrawSettings.MultiHumanPlacement = false

        Buttons.MultiHumanLoopButton.Text = "MULTI HUMAN LOOP: OFF"
        Buttons.MultiHumanLoopButton.TextColor3 = Color3.fromRGB(255, 200, 150)

        -- Disconnect click listener
        if DrawSettings.MultiHumanClickConn then
            DrawSettings.MultiHumanClickConn:Disconnect()
            DrawSettings.MultiHumanClickConn = nil
        end

        -- Stop all active human loops
        if DrawSettings.MultiHumanEntries then
            for _, entry in ipairs(DrawSettings.MultiHumanEntries) do
                if entry and entry.loopName then
                    stopLoop(entry.loopName)
                end
            end
        end

        DrawSettings.MultiHumanEntries = nil
    end
end)



Buttons.ApostlesForAllButton.MouseButton1Click:Connect(function()
    DrawSettings.ApostlesAllLoop = not DrawSettings.ApostlesAllLoop

    if DrawSettings.ApostlesAllLoop then
        Buttons.ApostlesForAllButton.Text = "APOSTLES FOR ALL: ON"
        Buttons.ApostlesForAllButton.TextColor3 = Color3.fromRGB(73, 255, 125)

        -- Main loop: build ALL players' segments first, then call Fire_Replicated_Bullet ONCE per tick
        startLoop("ApostlesAllLoop", function(loop)
            while loop.running do
                local allArgs = {}

                -- get players including yourself (same behavior as old Veto for all)
                for _, player in ipairs(getOtherPlayers(true)) do
                    local head = player.Character and player.Character:FindFirstChild("Head")
                    local root = player.Character and player.Character.PrimaryPart
                    if head and root then
                        -- orient text so it faces the same direction as player's torso
                        local look = root.CFrame.LookVector
                        local yrot = math.atan2(-look.Z, look.X) + math.pi/2
                        local facingCF = CFrame.fromAxisAngle(Vector3.new(0,1,0), yrot)

                        -- slightly above the center of their head (tweak Y offset if needed)
                        local drawPos = head.Position + Vector3.new(0, 0.9, 0)

                        -- create the segments for the word "APOSTLES"
                        local segs = CreateTextArgs("APOSTLES", drawPos, facingCF, 0.42)
                        for _, s in ipairs(segs) do
                            table.insert(allArgs, s)
                        end
                    end
                end

                -- fire once for everyone (this avoids per-player blocking)
                if #allArgs > 0 then
                    Fire_Replicated_Bullet(allArgs, DrawSettings.DOKILL)
                end

                task.wait(0.6) -- one-second cadence (simultaneous for all players)
            end
        end)

    else
        Buttons.ApostlesForAllButton.Text = "APOSTLES FOR ALL: OFF"
        Buttons.ApostlesForAllButton.TextColor3 = Color3.fromRGB(255, 100, 100)
        stopLoop("ApostlesAllLoop")
    end
end)


Buttons.StarButton.MouseButton1Click:Connect(function()
    drawStar(plr.Character and plr.Character:FindFirstChild("Head") and plr.Character.Head.Position or Vector3.new(), false)
end)
Buttons.StarLoopButton.MouseButton1Click:Connect(function()
    DrawSettings.StarLoop = not DrawSettings.StarLoop
    if DrawSettings.StarLoop then
        Buttons.StarLoopButton.Text = "STAR LOOP: ON"
        startLoop("StarLoop", function(loop)
            while loop.running do
                drawStar(plr.Character and plr.Character:FindFirstChild("Head") and plr.Character.Head.Position or Vector3.new(), false)
                for _=1,10 do if not loop.running then return end task.wait(0.05) end
            end
        end)
    else
        Buttons.StarLoopButton.Text = "STAR LOOP: OFF"
        stopLoop("StarLoop")
    end
end)
Buttons.CircleButton.MouseButton1Click:Connect(function()
    drawCircle(plr.Character and plr.Character:FindFirstChild("Head") and plr.Character.Head.Position or Vector3.new())
end)
Buttons.CircleLoopButton.MouseButton1Click:Connect(function()
    DrawSettings.CircleLoop = not DrawSettings.CircleLoop
    if DrawSettings.CircleLoop then
        Buttons.CircleLoopButton.Text = "CIRCLE LOOP: ON"
        startLoop("CircleLoop", function(loop)
            while loop.running do
                drawCircle(plr.Character and plr.Character:FindFirstChild("Head") and plr.Character.Head.Position or Vector3.new())
                for _=1,10 do if not loop.running then return end task.wait(0.05) end
            end
        end)
    else
        Buttons.CircleLoopButton.Text = "CIRCLE LOOP: OFF"
        stopLoop("CircleLoop")
    end
end)
Buttons.FullTerrorButton.MouseButton1Click:Connect(function()
    drawFullTerror()
end)
Buttons.FullTerrorLoopButton.MouseButton1Click:Connect(function()
    DrawSettings.FullTerrorLoop = not DrawSettings.FullTerrorLoop
    if DrawSettings.FullTerrorLoop then
        Buttons.FullTerrorLoopButton.Text = "TERROR+ LOOP: ON"
        startLoop("TerrorLoop", function(loop)
            while loop.running do
                drawFullTerror()
                for _=1,10 do if not loop.running then return end task.wait(0.05) end
            end
        end)
    else
        Buttons.FullTerrorLoopButton.Text = "TERROR+ LOOP: OFF"
        stopLoop("TerrorLoop")
    end
end)
Buttons.VetoButton.MouseButton1Click:Connect(function()
    local char = plr.Character
    local head = char and char:FindFirstChild("Head")
    local root = char and char.PrimaryPart
    if head and root then
        local look = root.CFrame.LookVector
        local yrot = math.atan2(-look.Z, look.X) + math.pi/2
        local facingCF = CFrame.fromAxisAngle(Vector3.new(0,1,0), yrot)
        drawVetoWord(head.Position, facingCF)
    end
end)
Buttons.VetoLoopButton.MouseButton1Click:Connect(function()
    DrawSettings.VetoLoop = not DrawSettings.VetoLoop
    if DrawSettings.VetoLoop then
        Buttons.VetoLoopButton.Text = "VETO LOOP: ON"
        startLoop("VetoLoop", function(loop)
            while loop.running do
                local char = plr.Character
                local head = char and char:FindFirstChild("Head")
                local root = char and char.PrimaryPart
                if head and root then
                    local look = root.CFrame.LookVector
                    local yrot = math.atan2(-look.Z, look.X) + math.pi/2
                    local facingCF = CFrame.fromAxisAngle(Vector3.new(0,1,0), yrot)
                    drawVetoWord(head.Position, facingCF)
                end
                for _=1,8 do if not loop.running then return end task.wait(0.11) end
            end
        end)
    else
        Buttons.VetoLoopButton.Text = "VETO LOOP: OFF"
        stopLoop("VetoLoop")
    end
end)
Buttons.ExtremeRandomButton.MouseButton1Click:Connect(function()
    Buttons.ExtremeRandomButton.Text = "CHOOSE ORIGIN..."
    Buttons.ExtremeRandomButton.TextColor3 = Color3.fromRGB(255,255,125)
    DrawSettings.ExtremeRandomOrigin = nil
    local conn
    conn = game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.UserInputType == Enum.UserInputType.MouseButton1 and not DrawSettings.HoveringOverGui then
            local mouse = plr:GetMouse()
            local pos = mouse.Hit.p
            DrawSettings.ExtremeRandomOrigin = pos
            Buttons.ExtremeRandomButton.Text = "EXTREME RANDOM: ON"
            Buttons.ExtremeRandomButton.TextColor3 = Color3.fromRGB(73, 255, 125)
            local args = {}
            for i=1,50 do
                local randomVec = pos + Vector3.new(
                    math.random(-150,150),
                    math.random(-75,75),
                    math.random(-150,150)
                )
                table.insert(args, {START=pos, END=randomVec})
            end
            Fire_Replicated_Bullet(args, DrawSettings.DOKILL)
            wait(0.1)
            Buttons.ExtremeRandomButton.Text = "EXTREME RANDOM: OFF"
            Buttons.ExtremeRandomButton.TextColor3 = sectionColors.Fun
            conn:Disconnect()
        end
    end)
end)
Buttons.ExtremeRandomLoopButton.MouseButton1Click:Connect(function()
    DrawSettings.ExtremeRandomLoop = not DrawSettings.ExtremeRandomLoop
    if DrawSettings.ExtremeRandomLoop then
        Buttons.ExtremeRandomLoopButton.Text = "EXT. RANDOM LOOP: ON"
        Buttons.ExtremeRandomLoopButton.TextColor3 = Color3.fromRGB(73, 255, 125)
        Buttons.ExtremeRandomButton.Text = "CHOOSE ORIGIN..."
        Buttons.ExtremeRandomButton.TextColor3 = Color3.fromRGB(255,255,125)
        DrawSettings.ExtremeRandomOrigin = nil
        local conn
        conn = game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
            if gameProcessed then return end
            if input.UserInputType == Enum.UserInputType.MouseButton1 and not DrawSettings.HoveringOverGui then
                local mouse = plr:GetMouse()
                local pos = mouse.Hit.p
                DrawSettings.ExtremeRandomOrigin = pos
                Buttons.ExtremeRandomButton.Text = "EXTREME RANDOM: ON"
                Buttons.ExtremeRandomButton.TextColor3 = Color3.fromRGB(73, 255, 125)
                startLoop("ExtremeRandomLoop", function(loop)
                    while loop.running do
                        local args = {}
                        for i=1,50 do
                            local randomVec = pos + Vector3.new(
                                math.random(-150,150),
                                math.random(-75,75),
                                math.random(-150,150)
                            )
                            table.insert(args, {START=pos, END=randomVec})
                        end
                        Fire_Replicated_Bullet(args, DrawSettings.DOKILL)
                        for _=1,10 do if not loop.running then return end task.wait(0.05) end
                    end
                end)
                conn:Disconnect()
            end
        end)
    else
        Buttons.ExtremeRandomLoopButton.Text = "EXT. RANDOM LOOP: OFF"
        Buttons.ExtremeRandomLoopButton.TextColor3 = sectionColors.Fun
        Buttons.ExtremeRandomButton.Text = "EXTREME RANDOM: OFF"
        Buttons.ExtremeRandomButton.TextColor3 = sectionColors.Fun
        stopLoop("ExtremeRandomLoop")
    end
end)
Buttons.HeadshotButton.MouseButton1Click:Connect(function()
    DrawSettings.Headshot = not DrawSettings.Headshot
    if DrawSettings.Headshot then
        Buttons.HeadshotButton.Text = "HEADSHOT ALL: ON"
        Buttons.HeadshotButton.TextColor3 = Color3.fromRGB(73, 255, 125)
        local originY = 60
        for _, player in ipairs(getOtherPlayers()) do
            local head = player.Character and player.Character:FindFirstChild("Head")
            if head then
                local origin = head.Position + Vector3.new(0,originY,0)
                local args = { {START=origin, END=head.Position, HIT=player} }
                Fire_Replicated_Bullet(args, false)
                task.spawn(function()
                    wait((originY/200)+0.08)
                    Fire_Replicated_Bullet(args, true)
                end)
            end
        end
        wait(0.01)
        DrawSettings.Headshot = false
        Buttons.HeadshotButton.Text = "HEADSHOT ALL: OFF"
        Buttons.HeadshotButton.TextColor3 = sectionColors.PvP
    else
        Buttons.HeadshotButton.Text = "HEADSHOT ALL: OFF"
        Buttons.HeadshotButton.TextColor3 = sectionColors.PvP
    end
end)
Buttons.HeadshotLoopButton.MouseButton1Click:Connect(function()
    DrawSettings.HeadshotLoop = not DrawSettings.HeadshotLoop
    if DrawSettings.HeadshotLoop then
        Buttons.HeadshotLoopButton.Text = "HEADSHOT LOOP: ON"
        Buttons.HeadshotLoopButton.TextColor3 = Color3.fromRGB(73, 255, 125)
        startLoop("HeadshotLoop", function(loop)
            while loop.running do
                local originY = 60
                for _, player in ipairs(getOtherPlayers()) do
                    local head = player.Character and player.Character:FindFirstChild("Head")
                    if head then
                        local origin = head.Position + Vector3.new(0,originY,0)
                        local args = { {START=origin, END=head.Position, HIT=player} }
                        Fire_Replicated_Bullet(args, false)
                        task.spawn(function()
                            wait((originY/200)+0.08)
                            Fire_Replicated_Bullet(args, true)
                        end)
                    end
                end
                for _=1,12 do if not loop.running then return end task.wait(0.05) end
            end
        end)
    else
        Buttons.HeadshotLoopButton.Text = "HEADSHOT LOOP: OFF"
        Buttons.HeadshotLoopButton.TextColor3 = sectionColors.PvP
        stopLoop("HeadshotLoop")
    end
end)
Buttons.ActivateButton.MouseButton1Click:Connect(function()
    DrawSettings.ActiveRender = not DrawSettings.ActiveRender
    if DrawSettings.ActiveRender then
        Buttons.ActivateButton.TextColor3 = Color3.fromRGB(73, 255, 125)
        Buttons.ActivateButton.Text = "RENDERING ACTIVE"
        Buttons.ActivateDrawing.Text = "ACTIVATE DRAW"
    else
        Buttons.ActivateButton.TextColor3 = sectionColors.System
        Buttons.ActivateButton.Text = "START RENDER"
    end
end)
Buttons.ActivateDrawing.MouseButton1Click:Connect(function()
    DrawSettings.Drawing = not DrawSettings.Drawing
    if DrawSettings.Drawing then
        Buttons.ActivateButton.TextColor3 = Color3.fromRGB(158, 76, 91)
        Buttons.ActivateDrawing.Text = "DRAWING [CLICK TWO POINTS]"
    else
        Buttons.ActivateButton.TextColor3 = sectionColors.System
        Buttons.ActivateDrawing.Text = "START DRAWING"
    end
end)
Buttons.BoldDrawingButton.MouseButton1Click:Connect(function()
    DrawSettings.BoldDrawing = not DrawSettings.BoldDrawing
    if DrawSettings.BoldDrawing then
        Buttons.BoldDrawingButton.Text = "BOLD DRAWING: ON"
        Buttons.BoldDrawingButton.TextColor3 = Color3.fromRGB(73, 255, 125)
    else
        Buttons.BoldDrawingButton.Text = "BOLD DRAWING: OFF"
        Buttons.BoldDrawingButton.TextColor3 = Color3.fromRGB(255, 209, 74)
    end
end)

game:GetService("UserInputService").InputBegan:Connect(function(Input,c)
    if not c  and Input.KeyCode == Enum.KeyCode.R then
        DrawSettings.Rotating = true
    end
end)
game:GetService("UserInputService").InputEnded:Connect(function(Input,c)
    if not c and Input.KeyCode == Enum.KeyCode.R then
        DrawSettings.Rotating = false
    end
    if not c and Input.UserInputType == Enum.UserInputType.Touch or Input.UserInputType == Enum.UserInputType.MouseButton1 and not DrawSettings.HoveringOverGui then
        if DrawSettings.Drawing and DrawSettings.P1 and not DrawSettings.P2 then
            DrawSettings.P2 = game:GetService("Players").LocalPlayer:GetMouse().Hit
            return
        end
        if DrawSettings.Drawing and not DrawSettings.P1 then
            DrawSettings.P1 = game:GetService("Players").LocalPlayer:GetMouse().Hit
            DrawSettings.B = Instance.new("Part",workspace)
            game:GetService("Players").LocalPlayer:GetMouse().TargetFilter = DrawSettings.B
            local distance = (game:GetService("Players").LocalPlayer:GetMouse().Hit.p - DrawSettings.P1.Position).magnitude
            local mesh = Instance.new("BlockMesh",DrawSettings.B)
            mesh.Scale = Vector3.new(.5,.5,1)
            DrawSettings.B.Name = "RayPart"
            DrawSettings.B.BrickColor = BrickColor.Yellow()
            DrawSettings.B.Material = Enum.Material.Neon
            DrawSettings.B.Anchored = true
            DrawSettings.B.CanCollide = false
            DrawSettings.B.Transparency = .5
            DrawSettings.B.formFactor = Enum.FormFactor.Custom
            DrawSettings.B.Size = Vector3.new(.2,.2,distance)
            DrawSettings.B.CFrame = CFrame.new(game:GetService("Players").LocalPlayer:GetMouse().Hit.p,DrawSettings.P1.Position) * CFrame.new(0,0,-distance/2)
            return
        end
    end
end)
Instance.new("UIDragDetector", MAINDRAW)
task.spawn(function()
    while task.wait() do
        if tonumber(REFRESHRATE.Text) then
            wait(tonumber(REFRESHRATE.Text) or .7)
            if #DrawSettings.GlobalRenders>0 and DrawSettings.ActiveRender then
                Fire_Replicated_Bullet(DrawSettings.GlobalRenders,DrawSettings.DOKILL)
            end
        end
    end
end)
task.spawn(function()
    while wait() do
        if DrawSettings.Selected and DrawSettings.Selected.Part and DrawSettings.Rotating then
            -- Rotation logic placeholder
        end
    end
end)
local RStep = game:service'RunService'.RenderStepped
while RStep:Wait() do
    if DrawSettings.Drawing then
        repeat task.wait() until DrawSettings.B
        repeat task.wait()
            local distance = (game:GetService("Players").LocalPlayer:GetMouse().Hit.p - DrawSettings.P1.Position).magnitude
            DrawSettings.B.Size = Vector3.new(.2,.2,distance)
            DrawSettings.B.CFrame = CFrame.new(game:GetService("Players").LocalPlayer:GetMouse().Hit.p,DrawSettings.P1.Position) * CFrame.new(0,0,-distance/2)
        until DrawSettings.P2
        if DrawSettings.BoldDrawing then
            local origin = DrawSettings.P1.p
            local target = DrawSettings.P2.p
            local dir = (target-origin)
            local perp
            if math.abs(dir.Unit.Y) < 0.99 then
                perp = dir.Unit:Cross(Vector3.new(0,1,0)).Unit
            else
                perp = dir.Unit:Cross(Vector3.new(1,0,0)).Unit
            end
            local thickness = 1.2
            local count = 40
            for i=1,count do
                local offset = (((i-1)/(count-1))-0.5) * thickness
                local startOffset = origin + perp * offset
                local endOffset = target + perp * offset
                local bullet = Instance.new("Part",workspace)
                local mesh = Instance.new("BlockMesh",bullet)
                mesh.Scale = Vector3.new(.5,.5,1)
                bullet.Name = "RayPart"
                bullet.BrickColor = BrickColor.Yellow()
                bullet.Material = Enum.Material.Neon
                bullet.Anchored = true
                bullet.CanCollide = false
                bullet.Transparency = .5
                bullet.formFactor = Enum.FormFactor.Custom
                local distance = (endOffset-startOffset).magnitude
                bullet.Size = Vector3.new(.2,.2,distance)
                bullet.CFrame = CFrame.new(endOffset,startOffset) * CFrame.new(0,0,-distance/2)
                game:GetService("Debris"):AddItem(bullet,.25)
                AddBulletToTable(startOffset,endOffset,bullet)
                bullet.Transparency = .93
            end
            DrawSettings.B:Destroy()
        else
            AddBulletToTable(DrawSettings.P1.p,DrawSettings.P2.p,DrawSettings.B)
            DrawSettings.B.Transparency = .93
        end
        DrawSettings.B = nil
        DrawSettings.P1 = nil
        DrawSettings.P2 = nil
    end
end
end
